generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users {
  id           Int            @id @default(autoincrement())
  name         String
  email        String         @unique
  username     String         @unique
  password     String
  type         String
  roleId       Int?
  currencyId   Int?
  isActive     Boolean        @default(true)
  createdAt    DateTime       @default(now())
  updatedAt    DateTime?      @updatedAt
  deletedAt    DateTime?
}

model Players {
  id           Int            @id @default(autoincrement())
  userId       Int            @unique
  agentId      Int            @unique
  createdAt    DateTime       @default(now())
  updatedAt    DateTime?      @updatedAt
  deletedAt    DateTime?
}

model Agents {
  id                 Int            @id @default(autoincrement())
  userId             Int 
  level              Int? 
  parentAgentId      Int?           
  parentAgentIds     Json?           
  rate               Decimal?       @db.Decimal(10, 2) @default(0)
  createdAt          DateTime       @default(now())
  updatedAt          DateTime?      @updatedAt
  deletedAt          DateTime?
}

model Roles {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  permissions String?   @db.LongText
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  deletedAt   DateTime?
}

model Currencies {
  id           Int            @id @default(autoincrement())
  name         String         @unique
  code         String         @unique
  createdAt    DateTime       @default(now())
  updatedAt    DateTime?      @updatedAt
  deletedAt    DateTime?
}

model ip_user {
  id        Int       @id @default(autoincrement())
  userId    Int
  roleId    Int
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  deletedAt DateTime?
}

model Transactions {
  id         Int        @id @default(autoincrement())
  senderId   Int
  receiverId Int?
  type       String     
  amount     Decimal    @default(0)
  note       String     @db.Text
  token      String?
  status     String
  currencyId Int
  updatedBy  Int?
  createdAt  DateTime   @default(now())
  updatedAt  DateTime?  @updatedAt
  deletedAt  DateTime?
}

model Balances {
  id             Int       @id @default(autoincrement())
  userId         Int
  balances       Decimal   @default(0)
  currencyId     Int
  updatedByUser  Int?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime? @updatedAt
  deletedAt      DateTime?
}

model Tables {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  permissions String    @db.LongText
  createdAt   DateTime  @default(now())
  updatedAt   DateTime? @updatedAt
  deletedAt   DateTime?
}
