{
  userId: 1,
  url: '/permissions/per',
  body: {},
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.findMany()` invocation:\n' +
    '\n' +
    '\n' +
    'The table `Permissions` does not exist in the current database.',
  level: 'error',
  timestamp: '2023-08-28T02:43:12.449Z'
}
{
  userId: 1,
  url: '/permissions/per',
  body: {},
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.findMany()` invocation:\n' +
    '\n' +
    '\n' +
    'The table `Permissions` does not exist in the current database.',
  level: 'error',
  timestamp: '2023-08-28T02:43:20.302Z'
}
{
  userId: 1,
  url: '/permissions/per',
  body: {},
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.findMany()` invocation:\n' +
    '\n' +
    '\n' +
    'The table `Permissions` does not exist in the current database.',
  level: 'error',
  timestamp: '2023-08-28T02:43:21.267Z'
}
{
  userId: 1,
  url: '/permissions/per',
  body: {},
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.findMany()` invocation:\n' +
    '\n' +
    '\n' +
    'The table `Permissions` does not exist in the current database.',
  level: 'error',
  timestamp: '2023-08-28T02:43:22.003Z'
}
{
  userId: 1,
  url: '/permissions/per',
  body: {},
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.findMany()` invocation:\n' +
    '\n' +
    '\n' +
    'The table `Permissions` does not exist in the current database.',
  level: 'error',
  timestamp: '2023-08-28T02:43:38.195Z'
}
{
  userId: 1,
  url: '/permissions/per',
  body: {},
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.findMany()` invocation:\n' +
    '\n' +
    '\n' +
    'The table `Permissions` does not exist in the current database.',
  level: 'error',
  timestamp: '2023-08-28T02:43:38.866Z'
}
{
  userId: 1,
  url: '/permissions/per',
  body: {},
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.findMany()` invocation:\n' +
    '\n' +
    '\n' +
    'The table `Permissions` does not exist in the current database.',
  level: 'error',
  timestamp: '2023-08-28T02:43:39.623Z'
}
{
  userId: 1,
  url: '/permissions/per',
  body: {},
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.findMany()` invocation:\n' +
    '\n' +
    '\n' +
    'The table `Permissions` does not exist in the current database.',
  level: 'error',
  timestamp: '2023-08-28T02:43:47.040Z'
}
{
  userId: 1,
  url: '/permissions/per',
  body: {},
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.findMany()` invocation:\n' +
    '\n' +
    '\n' +
    'The table `Permissions` does not exist in the current database.',
  level: 'error',
  timestamp: '2023-08-28T02:43:47.972Z'
}
{
  userId: 1,
  url: '/permissions/per',
  body: {},
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.findMany()` invocation:\n' +
    '\n' +
    '\n' +
    'The table `Permissions` does not exist in the current database.',
  level: 'error',
  timestamp: '2023-08-28T02:43:48.520Z'
}
{
  userId: 1,
  url: '/permissions/per',
  body: {},
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.findMany()` invocation:\n' +
    '\n' +
    '\n' +
    'The table `Permissions` does not exist in the current database.',
  level: 'error',
  timestamp: '2023-08-28T02:43:48.906Z'
}
{
  userId: 1,
  url: '/permissions/per',
  body: {},
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.findMany()` invocation:\n' +
    '\n' +
    '\n' +
    'The table `Permissions` does not exist in the current database.',
  level: 'error',
  timestamp: '2023-08-28T02:43:55.599Z'
}
{
  userId: 1,
  url: '/permissions/per',
  body: {},
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.findMany()` invocation:\n' +
    '\n' +
    '\n' +
    'The table `Permissions` does not exist in the current database.',
  level: 'error',
  timestamp: '2023-08-28T02:43:56.212Z'
}
{
  userId: 1,
  url: '/permissions/per',
  body: {},
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.findMany()` invocation:\n' +
    '\n' +
    '\n' +
    'The table `Permissions` does not exist in the current database.',
  level: 'error',
  timestamp: '2023-08-28T02:44:08.678Z'
}
{
  userId: 1,
  url: '/permissions/per',
  body: {},
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.findMany()` invocation:\n' +
    '\n' +
    '\n' +
    'The table `Permissions` does not exist in the current database.',
  level: 'error',
  timestamp: '2023-08-28T02:44:09.540Z'
}
{
  userId: 1,
  url: '/permissions/per',
  body: {},
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.findMany()` invocation:\n' +
    '\n' +
    '\n' +
    'The table `Permissions` does not exist in the current database.',
  level: 'error',
  timestamp: '2023-08-28T02:44:32.518Z'
}
{
  userId: 1,
  url: '/permissions/per',
  body: {},
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.findMany()` invocation:\n' +
    '\n' +
    '\n' +
    'The table `Permissions` does not exist in the current database.',
  level: 'error',
  timestamp: '2023-08-28T02:44:41.945Z'
}
{
  userId: 1,
  url: '/permissions/per',
  body: {},
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.findMany()` invocation:\n' +
    '\n' +
    '\n' +
    'The table `Permissions` does not exist in the current database.',
  level: 'error',
  timestamp: '2023-08-28T02:44:42.924Z'
}
{
  userId: 1,
  url: '/permissions/per',
  body: {},
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.findMany()` invocation:\n' +
    '\n' +
    '\n' +
    'The table `Permissions` does not exist in the current database.',
  level: 'error',
  timestamp: '2023-08-28T02:45:50.814Z'
}
{
  userId: 1,
  url: '/permissions/per',
  body: {},
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.findMany()` invocation:\n' +
    '\n' +
    '\n' +
    'The table `Permissions` does not exist in the current database.',
  level: 'error',
  timestamp: '2023-08-28T02:45:52.481Z'
}
{
  userId: 1,
  url: '/permissions/per',
  body: {},
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.findMany()` invocation:\n' +
    '\n' +
    '\n' +
    'The table `Permissions` does not exist in the current database.',
  level: 'error',
  timestamp: '2023-08-28T02:46:30.672Z'
}
{
  userId: 1,
  url: '/permissions/per',
  body: {},
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.findMany()` invocation:\n' +
    '\n' +
    '\n' +
    'The table `Permissions` does not exist in the current database.',
  level: 'error',
  timestamp: '2023-08-28T02:46:42.254Z'
}
{
  userId: 1,
  url: '/permissions/per',
  body: {},
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.findMany()` invocation:\n' +
    '\n' +
    '\n' +
    'The table `Permissions` does not exist in the current database.',
  level: 'error',
  timestamp: '2023-08-28T02:46:43.617Z'
}
{
  userId: 1,
  url: '/permissions/per',
  body: {},
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.findMany()` invocation:\n' +
    '\n' +
    '\n' +
    'The table `Permissions` does not exist in the current database.',
  level: 'error',
  timestamp: '2023-08-28T02:46:50.098Z'
}
{
  userId: 1,
  url: '/permissions/per',
  body: {},
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.findMany()` invocation:\n' +
    '\n' +
    '\n' +
    'The table `Permissions` does not exist in the current database.',
  level: 'error',
  timestamp: '2023-08-28T02:46:51.567Z'
}
{
  userId: 1,
  url: '/permissions/per',
  body: {},
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.findMany()` invocation:\n' +
    '\n' +
    '\n' +
    'The table `Permissions` does not exist in the current database.',
  level: 'error',
  timestamp: '2023-08-28T02:47:02.004Z'
}
{
  userId: 1,
  url: '/permissions/per',
  body: {},
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.findMany()` invocation:\n' +
    '\n' +
    '\n' +
    'The table `Permissions` does not exist in the current database.',
  level: 'error',
  timestamp: '2023-08-28T02:47:02.939Z'
}
{
  userId: 1,
  url: '/permissions/per',
  body: {},
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.findMany()` invocation:\n' +
    '\n' +
    '\n' +
    'The table `Permissions` does not exist in the current database.',
  level: 'error',
  timestamp: '2023-08-28T02:47:13.050Z'
}
{
  userId: 1,
  url: '/permissions/per',
  body: {},
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.findMany()` invocation:\n' +
    '\n' +
    '\n' +
    'The table `Permissions` does not exist in the current database.',
  level: 'error',
  timestamp: '2023-08-28T02:47:14.045Z'
}
{
  userId: 1,
  url: '/permissions/per',
  body: {},
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.findMany()` invocation:\n' +
    '\n' +
    '\n' +
    'The table `Permissions` does not exist in the current database.',
  level: 'error',
  timestamp: '2023-08-28T02:47:14.692Z'
}
{
  userId: 1,
  url: '/permissions/per',
  body: {},
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.findMany()` invocation:\n' +
    '\n' +
    '\n' +
    'The table `Permissions` does not exist in the current database.',
  level: 'error',
  timestamp: '2023-08-28T02:47:53.150Z'
}
{
  userId: 1,
  url: '/permissions/per',
  body: {},
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.findMany()` invocation:\n' +
    '\n' +
    '\n' +
    'The table `Permissions` does not exist in the current database.',
  level: 'error',
  timestamp: '2023-08-28T02:47:53.847Z'
}
{
  userId: 1,
  url: '/permissions/per',
  body: {},
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.findMany()` invocation:\n' +
    '\n' +
    '\n' +
    'The table `Permissions` does not exist in the current database.',
  level: 'error',
  timestamp: '2023-08-28T02:48:12.797Z'
}
{
  userId: 1,
  url: '/permissions/per',
  body: {},
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.findMany()` invocation:\n' +
    '\n' +
    '\n' +
    'The table `Permissions` does not exist in the current database.',
  level: 'error',
  timestamp: '2023-08-28T02:48:13.459Z'
}
{
  userId: 1,
  url: '/permissions/per',
  body: {},
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.findUnique()` invocation:\n' +
    '\n' +
    '\n' +
    'The table `Permissions` does not exist in the current database.',
  level: 'error',
  timestamp: '2023-08-28T03:09:15.217Z'
}
{
  userId: 1,
  url: '/permissions/per',
  body: {},
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.findUnique()` invocation:\n' +
    '\n' +
    '\n' +
    'The table `Permissions` does not exist in the current database.',
  level: 'error',
  timestamp: '2023-08-28T03:09:16.334Z'
}
{
  userId: 1,
  url: '/permissions/per',
  body: {},
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.findUnique()` invocation:\n' +
    '\n' +
    '\n' +
    'The table `Permissions` does not exist in the current database.',
  level: 'error',
  timestamp: '2023-08-28T03:09:16.976Z'
}
{
  userId: 1,
  url: '/permissions/per',
  body: {},
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.findUnique()` invocation:\n' +
    '\n' +
    '\n' +
    'The table `Permissions` does not exist in the current database.',
  level: 'error',
  timestamp: '2023-08-28T03:09:17.620Z'
}
{
  userId: 1,
  url: '/permissions/per',
  body: {},
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.findUnique()` invocation:\n' +
    '\n' +
    '\n' +
    'The table `Permissions` does not exist in the current database.',
  level: 'error',
  timestamp: '2023-08-28T03:09:18.175Z'
}
{
  userId: 2,
  url: '/permissions/per',
  body: {},
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.findUnique()` invocation:\n' +
    '\n' +
    '\n' +
    'The table `Permissions` does not exist in the current database.',
  level: 'error',
  timestamp: '2023-08-28T03:09:55.903Z'
}
{
  userId: 2,
  url: '/permissions/per',
  body: {},
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.findUnique()` invocation:\n' +
    '\n' +
    '\n' +
    'The table `Permissions` does not exist in the current database.',
  level: 'error',
  timestamp: '2023-08-28T03:09:56.577Z'
}
{
  userId: 2,
  url: '/permissions/per',
  body: {},
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.findUnique()` invocation:\n' +
    '\n' +
    '\n' +
    'The table `Permissions` does not exist in the current database.',
  level: 'error',
  timestamp: '2023-08-28T03:11:38.592Z'
}
{
  userId: 2,
  url: '/permissions/per',
  body: {},
  query: {},
  status: 404,
  message: 'Permissions not found',
  level: 'error',
  timestamp: '2023-08-28T03:12:34.743Z'
}
{
  userId: 2,
  url: '/permissions/per',
  body: {},
  query: {},
  status: 404,
  message: 'Permissions not found',
  level: 'error',
  timestamp: '2023-08-28T03:12:36.074Z'
}
{
  userId: 2,
  url: '/permissions/per',
  body: {},
  query: {},
  status: 404,
  message: 'Permissions not found',
  level: 'error',
  timestamp: '2023-08-28T03:12:37.089Z'
}
{
  userId: 2,
  url: '/permissions/per',
  body: {},
  query: {},
  status: 404,
  message: 'Permissions not found',
  level: 'error',
  timestamp: '2023-08-28T03:12:37.972Z'
}
{
  userId: 2,
  url: '/permissions/per',
  body: {},
  query: {},
  status: 404,
  message: 'Permissions not found',
  level: 'error',
  timestamp: '2023-08-28T03:12:38.580Z'
}
{
  userId: 2,
  url: '/permissions/per',
  body: {},
  query: {},
  status: 404,
  message: 'Permissions not found',
  level: 'error',
  timestamp: '2023-08-28T03:14:51.781Z'
}
{
  userId: 2,
  url: '/permissions/per',
  body: {},
  query: {},
  status: 404,
  message: 'Permissions not found',
  level: 'error',
  timestamp: '2023-08-28T03:14:54.254Z'
}
{
  userId: 2,
  url: '/permissions',
  body: {},
  query: {},
  status: 400,
  message: 'Name or permissions is required',
  level: 'error',
  timestamp: '2023-08-28T03:38:56.387Z'
}
{
  userId: 2,
  url: '/permissions',
  body: {},
  query: {},
  status: 400,
  message: 'Name is required',
  level: 'error',
  timestamp: '2023-08-28T03:39:58.963Z'
}
{
  userId: 2,
  url: '/permissions',
  body: {},
  query: {},
  status: 400,
  message: 'Name is required',
  level: 'error',
  timestamp: '2023-08-28T03:40:01.828Z'
}
{
  userId: 2,
  url: '/permissions',
  body: {},
  query: {},
  status: 400,
  message: 'Name is required',
  level: 'error',
  timestamp: '2023-08-28T03:40:13.175Z'
}
{
  userId: 2,
  url: '/permissions',
  body: {},
  query: {},
  status: 400,
  message: 'Name is required',
  level: 'error',
  timestamp: '2023-08-28T03:40:13.829Z'
}
{
  userId: 2,
  url: '/permissions',
  body: {},
  query: {},
  status: 400,
  message: 'Name is required',
  level: 'error',
  timestamp: '2023-08-28T03:40:35.521Z'
}
{
  userId: 2,
  url: '/permissions',
  body: {},
  query: {},
  status: 400,
  message: 'Name is required',
  level: 'error',
  timestamp: '2023-08-28T03:40:36.612Z'
}
{
  userId: 2,
  url: '/permissions',
  body: { name: 'users' },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.create()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T03:41:28.233Z'
}
{
  userId: 2,
  url: '/permissions',
  body: { name: 'users' },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.create()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T03:41:29.349Z'
}
{
  userId: 2,
  url: '/permissions',
  body: { name: 'users' },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.create()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T03:41:30.193Z'
}
{
  userId: 2,
  url: '/permissions',
  body: { name: 'users' },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.create()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T03:41:31.124Z'
}
{
  userId: 2,
  url: '/permissions',
  body: { name: 'users' },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.create()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T03:41:36.355Z'
}
{
  userId: 2,
  url: '/permissions',
  body: { name: 'users' },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.create()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T03:41:37.033Z'
}
{
  userId: 2,
  url: '/permissions',
  body: { name: 'users' },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.create()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T03:41:37.752Z'
}
{
  userId: 2,
  url: '/permissions',
  body: { name: 'users' },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.create()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T03:41:44.580Z'
}
{
  userId: 2,
  url: '/permissions',
  body: { name: 'users' },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.create()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T03:41:45.371Z'
}
{
  userId: 2,
  url: '/permissions',
  body: { name: 'users' },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.create()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T04:08:44.260Z'
}
{
  userId: 2,
  url: '/permissions',
  body: { name: 'users' },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.create()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T04:08:56.890Z'
}
{
  userId: 2,
  url: '/permissions',
  body: { name: 'users' },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.create()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T04:08:57.914Z'
}
{
  userId: 2,
  url: '/permissions',
  body: { name: 'users' },
  query: {},
  status: 400,
  message: 'Permissions existed',
  level: 'error',
  timestamp: '2023-08-28T04:16:45.713Z'
}
{
  userId: 2,
  url: '/permissions',
  body: { name: 'users' },
  query: {},
  status: 400,
  message: 'Permissions existed',
  level: 'error',
  timestamp: '2023-08-28T04:16:51.368Z'
}
{
  userId: 2,
  url: '/permissions',
  body: { name: 'players' },
  query: {},
  status: 404,
  message: 'Permissions not found',
  level: 'error',
  timestamp: '2023-08-28T04:17:42.019Z'
}
{
  userId: 2,
  url: '/permissions',
  body: { name: 'players' },
  query: {},
  status: 404,
  message: 'Permissions not found',
  level: 'error',
  timestamp: '2023-08-28T04:17:43.593Z'
}
{
  userId: 2,
  url: '/permissions',
  body: { name: 'players' },
  query: {},
  status: 404,
  message: 'Permissions not found',
  level: 'error',
  timestamp: '2023-08-28T04:17:45.814Z'
}
{
  userId: 2,
  url: '/permissions',
  body: { name: 'players' },
  query: {},
  status: 404,
  message: 'Permissions not found',
  level: 'error',
  timestamp: '2023-08-28T04:17:46.644Z'
}
{
  userId: 2,
  url: '/permissions',
  body: { name: 'players' },
  query: {},
  status: 404,
  message: 'Permissions not found',
  level: 'error',
  timestamp: '2023-08-28T04:17:50.719Z'
}
{
  userId: 2,
  url: '/permissions',
  body: { name: 'users' },
  query: {},
  status: 400,
  message: 'Permissions existed',
  level: 'error',
  timestamp: '2023-08-28T04:19:46.005Z'
}
{
  userId: 2,
  url: '/permissions',
  body: { name: 'users' },
  query: {},
  status: 400,
  message: 'Permissions existed',
  level: 'error',
  timestamp: '2023-08-28T04:19:46.933Z'
}
{
  userId: 2,
  url: '/permissions',
  body: { name: 'users' },
  query: {},
  status: 400,
  message: 'Permissions existed',
  level: 'error',
  timestamp: '2023-08-28T04:19:47.549Z'
}
{
  userId: 2,
  url: '/permissions',
  body: { name: 'users' },
  query: {},
  status: 400,
  message: 'Permissions existed',
  level: 'error',
  timestamp: '2023-08-28T04:19:48.111Z'
}
{
  userId: 2,
  url: '/permissions',
  body: { name: 'players' },
  query: {},
  status: 404,
  message: 'Permissions not found',
  level: 'error',
  timestamp: '2023-08-28T04:19:54.212Z'
}
{
  userId: 2,
  url: '/permissions',
  body: { name: 'players' },
  query: {},
  status: 404,
  message: 'Permissions not found',
  level: 'error',
  timestamp: '2023-08-28T04:19:55.478Z'
}
{
  userId: 2,
  url: '/permissions',
  body: { name: 'players' },
  query: {},
  status: 404,
  message: 'Permissions not found',
  level: 'error',
  timestamp: '2023-08-28T04:19:56.067Z'
}
{
  userId: 2,
  url: '/permissions',
  body: { name: 'players' },
  query: {},
  status: 404,
  message: 'Permissions not found',
  level: 'error',
  timestamp: '2023-08-28T04:19:56.729Z'
}
{
  userId: 2,
  url: '/permissions',
  body: { name: 'players' },
  query: {},
  status: 400,
  message: 'INTERNAL_SERVER_ERROR',
  level: 'error',
  timestamp: '2023-08-28T04:23:50.751Z'
}
{
  userId: 2,
  url: '/permissions',
  body: { name: 'players' },
  query: {},
  status: 400,
  message: 'INTERNAL_SERVER_ERROR',
  level: 'error',
  timestamp: '2023-08-28T04:23:51.786Z'
}
{
  userId: 2,
  url: '/permissions',
  body: { name: 'players' },
  query: {},
  status: 400,
  message: 'INTERNAL_SERVER_ERROR',
  level: 'error',
  timestamp: '2023-08-28T04:23:52.559Z'
}
{
  userId: 2,
  url: '/permissions',
  body: { name: 'players' },
  query: {},
  status: 400,
  message: 'INTERNAL_SERVER_ERROR',
  level: 'error',
  timestamp: '2023-08-28T04:23:53.165Z'
}
{
  userId: 2,
  url: '/permissions',
  body: { name: 'players' },
  query: {},
  status: 400,
  message: 'INTERNAL_SERVER_ERROR',
  level: 'error',
  timestamp: '2023-08-28T04:23:53.710Z'
}
{
  userId: 2,
  url: '/permissions',
  body: { name: 'players' },
  query: {},
  status: 400,
  message: 'INTERNAL_SERVER_ERROR',
  level: 'error',
  timestamp: '2023-08-28T04:23:55.001Z'
}
{
  userId: 2,
  url: '/permissions',
  body: { name: 'players' },
  query: {},
  status: 404,
  message: 'Permissions not found',
  level: 'error',
  timestamp: '2023-08-28T04:34:55.110Z'
}
{
  userId: 2,
  url: '/permissions',
  body: { name: 'players' },
  query: {},
  status: 404,
  message: 'Permissions not found',
  level: 'error',
  timestamp: '2023-08-28T04:34:56.165Z'
}
{
  userId: 2,
  url: '/permissions',
  body: { name: 'players' },
  query: {},
  status: 404,
  message: 'Permissions not found',
  level: 'error',
  timestamp: '2023-08-28T04:34:56.806Z'
}
{
  userId: 2,
  url: '/permissions',
  body: { name: 'players' },
  query: {},
  status: 404,
  message: 'Permissions not found',
  level: 'error',
  timestamp: '2023-08-28T04:34:57.330Z'
}
{
  userId: 2,
  url: '/permissions',
  body: { name: 'players' },
  query: {},
  status: 400,
  message: 'Permissions existed',
  level: 'error',
  timestamp: '2023-08-28T04:37:15.268Z'
}
{
  userId: 2,
  url: '/permissions',
  body: { name: 'players' },
  query: {},
  status: 400,
  message: 'Permissions existed',
  level: 'error',
  timestamp: '2023-08-28T04:37:16.322Z'
}
{
  userId: 2,
  url: '/permissions',
  body: { name: 'players' },
  query: {},
  status: 400,
  message: 'Permissions existed',
  level: 'error',
  timestamp: '2023-08-28T04:37:19.512Z'
}
{
  userId: 2,
  url: '/permissions',
  body: { name: 'players' },
  query: {},
  status: 400,
  message: 'Permissions existed',
  level: 'error',
  timestamp: '2023-08-28T04:37:19.985Z'
}
{
  userId: 2,
  url: '/permissions',
  body: { name: 'players' },
  query: {},
  status: 400,
  message: 'Permissions existed',
  level: 'error',
  timestamp: '2023-08-28T04:37:20.544Z'
}
{
  userId: 2,
  url: '/permissions',
  body: { name: 'players' },
  query: {},
  status: 400,
  message: 'Permissions existed',
  level: 'error',
  timestamp: '2023-08-28T04:40:07.169Z'
}
{
  userId: 2,
  url: '/permissions',
  body: { name: 'players' },
  query: {},
  status: 400,
  message: 'Permissions existed',
  level: 'error',
  timestamp: '2023-08-28T04:40:12.615Z'
}
{
  userId: 2,
  url: '/permissions',
  body: { name: 'players' },
  query: {},
  status: 400,
  message: 'Permissions existed',
  level: 'error',
  timestamp: '2023-08-28T04:40:14.694Z'
}
{
  userId: 2,
  url: '/permissions',
  body: { name: 'players' },
  query: {},
  status: 400,
  message: 'Permissions existed',
  level: 'error',
  timestamp: '2023-08-28T04:40:16.187Z'
}
{
  userId: 2,
  url: '/permissions',
  body: { name: 'players' },
  query: {},
  status: 400,
  message: 'Permissions existed',
  level: 'error',
  timestamp: '2023-08-28T04:40:16.750Z'
}
{
  userId: 2,
  url: '/permissions',
  body: { name: 'players' },
  query: {},
  status: 400,
  message: 'Permissions existed',
  level: 'error',
  timestamp: '2023-08-28T04:41:15.157Z'
}
{
  userId: 2,
  url: '/permissions',
  body: { name: 'players' },
  query: {},
  status: 400,
  message: 'Permissions existed',
  level: 'error',
  timestamp: '2023-08-28T04:41:16.043Z'
}
{
  userId: 2,
  url: '/permissions',
  body: { name: 'Players' },
  query: {},
  status: 400,
  message: 'Permissions existed',
  level: 'error',
  timestamp: '2023-08-28T04:41:22.415Z'
}
{
  userId: 2,
  url: '/permissions',
  body: { name: 'Players' },
  query: {},
  status: 400,
  message: 'Permissions existed',
  level: 'error',
  timestamp: '2023-08-28T04:41:23.266Z'
}
{
  userId: 2,
  url: '/permissions',
  body: { name: 'Players' },
  query: {},
  status: 400,
  message: 'Permissions existed',
  level: 'error',
  timestamp: '2023-08-28T06:31:52.006Z'
}
{
  userId: 2,
  url: '/permissions',
  body: { name: 'Players' },
  query: {},
  status: 400,
  message: 'Permissions existed',
  level: 'error',
  timestamp: '2023-08-28T06:31:52.822Z'
}
{
  userId: 2,
  url: '/permissions',
  body: { name: 'Players' },
  query: {},
  status: 400,
  message: 'Permissions existed',
  level: 'error',
  timestamp: '2023-08-28T06:31:53.817Z'
}
{
  userId: 2,
  url: '/permissions',
  body: { name: 'Players' },
  query: {},
  status: 400,
  message: 'Permissions existed',
  level: 'error',
  timestamp: '2023-08-28T06:31:54.831Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: {},
  query: {},
  status: 400,
  message: "Cannot read properties of undefined (reading 'toLowerCase')",
  level: 'error',
  timestamp: '2023-08-28T06:34:39.974Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: {},
  query: {},
  status: 404,
  message: 'Permissions not found',
  level: 'error',
  timestamp: '2023-08-28T06:35:31.168Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: {},
  query: {},
  status: 404,
  message: 'Permissions not found',
  level: 'error',
  timestamp: '2023-08-28T06:35:32.071Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: {},
  query: {},
  status: 404,
  message: 'Permissions not found',
  level: 'error',
  timestamp: '2023-08-28T06:35:32.695Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: {},
  query: {},
  status: 404,
  message: 'Permissions not found',
  level: 'error',
  timestamp: '2023-08-28T06:35:33.413Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: {},
  query: {},
  status: 400,
  message: 'Name is required',
  level: 'error',
  timestamp: '2023-08-28T06:35:40.731Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: {},
  query: {},
  status: 400,
  message: 'Name is required',
  level: 'error',
  timestamp: '2023-08-28T06:35:41.551Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: {},
  query: {},
  status: 400,
  message: 'Name is required',
  level: 'error',
  timestamp: '2023-08-28T06:35:42.152Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: {},
  query: {},
  status: 404,
  message: 'Permissions not found',
  level: 'error',
  timestamp: '2023-08-28T06:39:03.387Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: {},
  query: {},
  status: 404,
  message: 'Permissions not found',
  level: 'error',
  timestamp: '2023-08-28T06:39:15.887Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: {},
  query: {},
  status: 404,
  message: 'Permissions not found',
  level: 'error',
  timestamp: '2023-08-28T06:39:17.288Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: {},
  query: {},
  status: 404,
  message: 'Permissions not found',
  level: 'error',
  timestamp: '2023-08-28T06:40:19.096Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: {},
  query: {},
  status: 404,
  message: 'Permissions not found',
  level: 'error',
  timestamp: '2023-08-28T06:40:19.748Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players' },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T07:30:26.236Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players' },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T07:30:27.326Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players' },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T07:30:28.017Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players' },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T07:30:35.477Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players' },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T07:30:36.155Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players' },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T07:30:39.314Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players' },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T07:30:40.291Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players' },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T07:30:41.301Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players' },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T07:30:42.399Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players' },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T07:30:43.408Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players' },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T07:30:44.295Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players' },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T07:30:56.492Z'
}
{
  userId: 2,
  url: '/permissions/2',
  body: { name: 'players' },
  query: {},
  status: 404,
  message: 'Permissions not found',
  level: 'error',
  timestamp: '2023-08-28T07:30:59.803Z'
}
{
  userId: 2,
  url: '/permissions/2',
  body: { name: 'players' },
  query: {},
  status: 404,
  message: 'Permissions not found',
  level: 'error',
  timestamp: '2023-08-28T07:31:01.488Z'
}
{
  userId: 2,
  url: '/permissions/2',
  body: { name: 'players' },
  query: {},
  status: 404,
  message: 'Permissions not found',
  level: 'error',
  timestamp: '2023-08-28T07:31:02.432Z'
}
{
  userId: 2,
  url: '/permissions/14',
  body: { name: '' },
  query: {},
  status: 400,
  message: 'Name is required',
  level: 'error',
  timestamp: '2023-08-28T07:34:25.287Z'
}
{
  userId: 2,
  url: '/permissions/14',
  body: { name: '' },
  query: {},
  status: 400,
  message: 'Name is required',
  level: 'error',
  timestamp: '2023-08-28T07:34:26.278Z'
}
{
  userId: 2,
  url: '/permissions/14',
  body: { name: '' },
  query: {},
  status: 400,
  message: 'Name is required',
  level: 'error',
  timestamp: '2023-08-28T07:34:26.921Z'
}
{
  userId: 2,
  url: '/permissions/14',
  body: { name: '' },
  query: {},
  status: 400,
  message: 'Name is required',
  level: 'error',
  timestamp: '2023-08-28T07:34:30.836Z'
}
{
  userId: 2,
  url: '/permissions/14',
  body: { name: '' },
  query: {},
  status: 400,
  message: 'Name is required',
  level: 'error',
  timestamp: '2023-08-28T07:35:09.305Z'
}
{
  userId: 2,
  url: '/permissions/14',
  body: { name: '' },
  query: {},
  status: 400,
  message: 'Name is required',
  level: 'error',
  timestamp: '2023-08-28T07:35:10.081Z'
}
{
  userId: 2,
  url: '/permissions/14',
  body: { name: '' },
  query: {},
  status: 400,
  message: 'Name is required',
  level: 'error',
  timestamp: '2023-08-28T07:35:16.082Z'
}
{
  userId: 2,
  url: '/permissions/14',
  body: { name: '' },
  query: {},
  status: 400,
  message: 'Name is required',
  level: 'error',
  timestamp: '2023-08-28T07:35:25.395Z'
}
{
  userId: 2,
  url: '/permissions/14',
  body: { name: '' },
  query: {},
  status: 400,
  message: 'Name is required',
  level: 'error',
  timestamp: '2023-08-28T07:35:26.147Z'
}
{
  userId: 2,
  url: '/permissions/14',
  body: { name: '' },
  query: {},
  status: 400,
  message: 'Permission Id is not valid',
  level: 'error',
  timestamp: '2023-08-28T07:39:19.215Z'
}
{
  userId: 2,
  url: '/permissions/14',
  body: { name: '' },
  query: {},
  status: 400,
  message: 'Permission Id is not valid',
  level: 'error',
  timestamp: '2023-08-28T07:39:20.352Z'
}
{
  userId: 2,
  url: '/permissions/14z',
  body: { name: '' },
  query: {},
  status: 400,
  message: 'Permission Id is not valid',
  level: 'error',
  timestamp: '2023-08-28T07:39:37.415Z'
}
{
  userId: 2,
  url: '/permissions/14',
  body: {},
  query: {},
  status: 400,
  message: "Cannot read properties of undefined (reading 'toLowerCase')",
  level: 'error',
  timestamp: '2023-08-28T07:40:43.973Z'
}
{
  userId: 2,
  url: '/permissions/14',
  body: {},
  query: {},
  status: 400,
  message: "Cannot read properties of undefined (reading 'toLowerCase')",
  level: 'error',
  timestamp: '2023-08-28T07:40:44.762Z'
}
{
  userId: 2,
  url: '/permissions/14',
  body: {},
  query: {},
  status: 400,
  message: "Cannot read properties of undefined (reading 'toLowerCase')",
  level: 'error',
  timestamp: '2023-08-28T07:40:47.146Z'
}
{
  userId: 2,
  url: '/permissions/14',
  body: { name: '' },
  query: {},
  status: 400,
  message: 'Name is required',
  level: 'error',
  timestamp: '2023-08-28T07:41:50.035Z'
}
{
  userId: 2,
  url: '/permissions/14',
  body: { name: '' },
  query: {},
  status: 400,
  message: 'Name is required',
  level: 'error',
  timestamp: '2023-08-28T07:41:50.836Z'
}
{
  userId: 2,
  url: '/permissions/14',
  body: { name: '' },
  query: {},
  status: 400,
  message: 'Name is required',
  level: 'error',
  timestamp: '2023-08-28T07:42:09.054Z'
}
{
  userId: 2,
  url: '/permissions/14',
  body: { name: '' },
  query: {},
  status: 400,
  message: 'Name is required',
  level: 'error',
  timestamp: '2023-08-28T07:42:13.106Z'
}
{
  userId: 2,
  url: '/permissions/14',
  body: { name: '' },
  query: {},
  status: 400,
  message: 'Name is required',
  level: 'error',
  timestamp: '2023-08-28T07:42:13.927Z'
}
{
  userId: 2,
  url: '/permissions/14',
  body: { name: '' },
  query: {},
  status: 400,
  message: 'Name is required',
  level: 'error',
  timestamp: '2023-08-28T07:42:14.687Z'
}
{
  userId: 2,
  url: '/permissions/14',
  body: { name: '' },
  query: {},
  status: 400,
  message: 'Name is required',
  level: 'error',
  timestamp: '2023-08-28T07:42:21.710Z'
}
{
  userId: 2,
  url: '/permissions/14',
  body: { name: '' },
  query: {},
  status: 400,
  message: 'Name is required',
  level: 'error',
  timestamp: '2023-08-28T07:42:22.530Z'
}
{
  userId: 2,
  url: '/permissions/14',
  body: {},
  query: {},
  status: 400,
  message: 'Name is required',
  level: 'error',
  timestamp: '2023-08-28T07:42:27.926Z'
}
{
  userId: 2,
  url: '/permissions/14',
  body: {},
  query: {},
  status: 400,
  message: 'Name is required',
  level: 'error',
  timestamp: '2023-08-28T07:42:28.791Z'
}
{
  userId: 2,
  url: '/permissions/14',
  body: {},
  query: {},
  status: 400,
  message: "Cannot read properties of undefined (reading 'toLowerCase')",
  level: 'error',
  timestamp: '2023-08-28T07:42:43.925Z'
}
{
  userId: 2,
  url: '/permissions/14',
  body: {},
  query: {},
  status: 400,
  message: "Cannot read properties of undefined (reading 'toLowerCase')",
  level: 'error',
  timestamp: '2023-08-28T07:42:44.950Z'
}
{
  userId: 2,
  url: '/permissions/14',
  body: {},
  query: {},
  status: 400,
  message: "Cannot read properties of undefined (reading 'toLowerCase')",
  level: 'error',
  timestamp: '2023-08-28T07:42:45.712Z'
}
{
  userId: 2,
  url: '/permissions/14',
  body: { name: 'users' },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T07:43:37.579Z'
}
{
  userId: 2,
  url: '/permissions/3',
  body: { name: 'users' },
  query: {},
  status: 404,
  message: 'Permissions not found',
  level: 'error',
  timestamp: '2023-08-28T07:43:48.430Z'
}
{
  userId: 2,
  url: '/permissions/3',
  body: { name: 'users' },
  query: {},
  status: 404,
  message: 'Permissions not found',
  level: 'error',
  timestamp: '2023-08-28T07:43:49.891Z'
}
{
  userId: 2,
  url: '/permissions/3',
  body: { name: 'users' },
  query: {},
  status: 404,
  message: 'Permissions not found',
  level: 'error',
  timestamp: '2023-08-28T07:43:52.640Z'
}
{
  userId: 2,
  url: '/permissions/3',
  body: { name: 'users' },
  query: {},
  status: 404,
  message: 'Permissions not found',
  level: 'error',
  timestamp: '2023-08-28T07:43:54.316Z'
}
{
  userId: 2,
  url: '/permissions/3',
  body: { name: 'users' },
  query: {},
  status: 404,
  message: 'Permissions not found',
  level: 'error',
  timestamp: '2023-08-28T07:44:07.434Z'
}
{
  userId: 2,
  url: '/permissions/3',
  body: { name: 'users' },
  query: {},
  status: 404,
  message: 'Permissions not found',
  level: 'error',
  timestamp: '2023-08-28T07:44:08.628Z'
}
{
  userId: 2,
  url: '/permissions/5',
  body: { name: 'users' },
  query: {},
  status: 404,
  message: 'Permissions not found',
  level: 'error',
  timestamp: '2023-08-28T07:44:12.825Z'
}
{
  userId: 2,
  url: '/permissions/5',
  body: { name: 'users' },
  query: {},
  status: 404,
  message: 'Permissions not found',
  level: 'error',
  timestamp: '2023-08-28T07:44:17.012Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T07:45:09.772Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T07:45:13.439Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T07:45:22.037Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T07:46:04.854Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T07:46:06.037Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: 'PrismaClientKnownRequestError: \n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T07:46:21.739Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: 'PrismaClientKnownRequestError: \n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T07:46:22.524Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: 'PrismaClientKnownRequestError: \n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T07:46:23.689Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: 'PrismaClientKnownRequestError: \n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T07:46:42.331Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: 'PrismaClientKnownRequestError: \n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T07:46:48.706Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: 'PrismaClientKnownRequestError: \n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T07:50:47.222Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: 'PrismaClientKnownRequestError: \n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T07:50:48.361Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T07:51:28.524Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T07:51:29.714Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T07:51:32.080Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T07:51:38.653Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T07:52:00.322Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T07:52:01.349Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T07:52:02.009Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T07:52:07.601Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T07:52:10.550Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T07:52:45.344Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T07:52:46.492Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T07:54:10.123Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T07:54:11.534Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T07:54:12.269Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T07:54:13.330Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T07:54:14.078Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T07:54:35.493Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T07:54:45.399Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T07:55:51.966Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T07:55:53.010Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T07:56:02.067Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T07:56:03.755Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T07:56:17.205Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T07:56:18.340Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T07:56:19.344Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T07:56:28.207Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T07:57:09.467Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T07:57:10.244Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T07:58:39.850Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T07:58:41.039Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T07:58:58.970Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: 'PrismaClientKnownRequestError: \n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T07:59:25.855Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: 'PrismaClientKnownRequestError: \n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T07:59:26.845Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T07:59:53.430Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T07:59:54.546Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T08:00:12.620Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T08:00:13.756Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T08:00:14.594Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T08:00:17.960Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T08:00:18.759Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T08:00:25.907Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T08:01:01.636Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T08:01:02.472Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: 'PrismaClientKnownRequestError: \n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T08:01:10.580Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: 'PrismaClientKnownRequestError: \n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T08:01:11.346Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: 'PrismaClientKnownRequestError: \n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T08:01:12.074Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: 'PrismaClientKnownRequestError: \n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T08:01:32.464Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: 'PrismaClientKnownRequestError: \n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T08:01:34.314Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: 'PrismaClientKnownRequestError: \n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T08:32:31.760Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: 'PrismaClientKnownRequestError: \n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T08:32:32.595Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: 'PrismaClientKnownRequestError: \n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T08:32:33.395Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: 'PrismaClientKnownRequestError: \n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T08:32:40.495Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: 'PrismaClientKnownRequestError: \n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T08:33:19.842Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: 'PrismaClientKnownRequestError: \n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T08:33:31.092Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: 'PrismaClientKnownRequestError: \n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T08:33:35.426Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: 'PrismaClientKnownRequestError: \n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T08:34:04.426Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: 'PrismaClientKnownRequestError: \n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T08:34:05.418Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: 'PrismaClientKnownRequestError: \n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T08:34:06.236Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: 'PrismaClientKnownRequestError: \n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T08:34:06.897Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: 'PrismaClientKnownRequestError: \n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T08:34:23.174Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: 'PrismaClientKnownRequestError: \n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T08:34:25.719Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: 'PrismaClientKnownRequestError: \n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T08:34:32.233Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: 'PrismaClientKnownRequestError: \n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T08:34:44.734Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: 'PrismaClientKnownRequestError: \n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T08:34:59.379Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: 'PrismaClientKnownRequestError: \n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T08:35:02.036Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: 'PrismaClientKnownRequestError: \n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T08:35:06.506Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: 'PrismaClientKnownRequestError: \n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T08:35:25.477Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: 'PrismaClientKnownRequestError: \n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T08:35:26.246Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: 'PrismaClientKnownRequestError: \n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T08:35:30.831Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '{"name":"PrismaClientKnownRequestError","code":"P2002","clientVersion":"5.0.0","meta":{"target":"Permissions_name_key"}}',
  level: 'error',
  timestamp: '2023-08-28T08:36:03.666Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '{"name":"PrismaClientKnownRequestError","code":"P2002","clientVersion":"5.0.0","meta":{"target":"Permissions_name_key"}}',
  level: 'error',
  timestamp: '2023-08-28T08:36:34.944Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '{"name":"PrismaClientKnownRequestError","code":"P2002","clientVersion":"5.0.0","meta":{"target":"Permissions_name_key"}}',
  level: 'error',
  timestamp: '2023-08-28T08:36:40.640Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '{"name":"PrismaClientKnownRequestError","code":"P2002","clientVersion":"5.0.0","meta":{"target":"Permissions_name_key"}}',
  level: 'error',
  timestamp: '2023-08-28T08:36:47.922Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '{"name":"PrismaClientKnownRequestError","code":"P2002","clientVersion":"5.0.0","meta":{"target":"Permissions_name_key"}}',
  level: 'error',
  timestamp: '2023-08-28T08:36:56.238Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '{"name":"PrismaClientKnownRequestError","code":"P2002","clientVersion":"5.0.0","meta":{"target":"Permissions_name_key"}}',
  level: 'error',
  timestamp: '2023-08-28T08:36:57.210Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '{"name":"PrismaClientKnownRequestError","code":"P2002","clientVersion":"5.0.0","meta":{"target":"Permissions_name_key"}}',
  level: 'error',
  timestamp: '2023-08-28T08:37:08.727Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '{"name":"PrismaClientKnownRequestError","code":"P2002","clientVersion":"5.0.0","meta":{"target":"Permissions_name_key"}}',
  level: 'error',
  timestamp: '2023-08-28T08:37:21.133Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '{"name":"PrismaClientKnownRequestError","code":"P2002","clientVersion":"5.0.0","meta":{"target":"Permissions_name_key"}}',
  level: 'error',
  timestamp: '2023-08-28T08:37:37.999Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '{"name":"PrismaClientKnownRequestError","code":"P2002","clientVersion":"5.0.0","meta":{"target":"Permissions_name_key"}}',
  level: 'error',
  timestamp: '2023-08-28T08:37:59.328Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '{"name":"PrismaClientKnownRequestError","code":"P2002","clientVersion":"5.0.0","meta":{"target":"Permissions_name_key"}}',
  level: 'error',
  timestamp: '2023-08-28T08:38:12.624Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '{"name":"PrismaClientKnownRequestError","code":"P2002","clientVersion":"5.0.0","meta":{"target":"Permissions_name_key"}}',
  level: 'error',
  timestamp: '2023-08-28T08:38:14.819Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '{"name":"PrismaClientKnownRequestError","code":"P2002","clientVersion":"5.0.0","meta":{"target":"Permissions_name_key"}}',
  level: 'error',
  timestamp: '2023-08-28T08:39:08.132Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '{"name":"PrismaClientKnownRequestError","code":"P2002","clientVersion":"5.0.0","meta":{"target":"Permissions_name_key"}}',
  level: 'error',
  timestamp: '2023-08-28T08:39:09.169Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: 'PrismaClientKnownRequestError: \n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T08:39:26.178Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: 'PrismaClientKnownRequestError: \n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T08:39:29.987Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 400,
  message: 'P2002',
  level: 'error',
  timestamp: '2023-08-28T08:39:43.586Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 400,
  message: 'P2002',
  level: 'error',
  timestamp: '2023-08-28T08:39:45.270Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 400,
  message: 'P2002',
  level: 'error',
  timestamp: '2023-08-28T08:39:58.383Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 400,
  message: 'P2002',
  level: 'error',
  timestamp: '2023-08-28T08:40:16.322Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 400,
  message: 'P2002',
  level: 'error',
  timestamp: '2023-08-28T08:40:17.154Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 400,
  message: 'P2002',
  level: 'error',
  timestamp: '2023-08-28T08:40:23.939Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 400,
  message: 'P2002',
  level: 'error',
  timestamp: '2023-08-28T08:40:24.850Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 400,
  message: 'P2002',
  level: 'error',
  timestamp: '2023-08-28T08:40:41.039Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 400,
  message: 'P2002',
  level: 'error',
  timestamp: '2023-08-28T08:40:42.276Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 400,
  message: 'P2002',
  level: 'error',
  timestamp: '2023-08-28T08:40:45.098Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 400,
  message: 'P2002',
  level: 'error',
  timestamp: '2023-08-28T08:40:45.954Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 400,
  message: 'P2002',
  level: 'error',
  timestamp: '2023-08-28T08:40:54.475Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 400,
  message: 'P2002',
  level: 'error',
  timestamp: '2023-08-28T08:40:55.262Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 400,
  message: 'P2002',
  level: 'error',
  timestamp: '2023-08-28T08:41:12.123Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 400,
  message: 'P2002',
  level: 'error',
  timestamp: '2023-08-28T08:41:13.036Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 400,
  message: 'P2002',
  level: 'error',
  timestamp: '2023-08-28T08:41:17.884Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 400,
  message: 'P2002',
  level: 'error',
  timestamp: '2023-08-28T08:41:18.851Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T08:42:10.680Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T08:42:12.027Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T08:42:35.588Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T08:43:00.596Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T08:43:09.168Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T08:43:25.853Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T08:43:30.137Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T08:43:40.321Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T08:43:41.434Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T08:43:51.495Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T08:44:05.204Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T08:45:09.368Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T08:45:11.869Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T08:46:09.903Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T08:46:50.981Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T08:46:52.107Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T08:46:59.123Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T08:46:59.888Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T08:47:00.627Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T08:48:44.318Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T08:48:46.665Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T08:48:48.210Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T08:49:01.452Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T08:49:02.861Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T08:49:28.613Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T08:49:29.872Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T08:49:37.531Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T08:49:38.474Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T08:49:39.396Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T08:49:49.830Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T08:49:50.718Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T08:49:53.957Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T08:52:25.699Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T08:53:04.495Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T08:53:21.334Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T08:53:32.695Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T08:53:33.864Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T08:54:44.029Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T08:55:25.990Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T08:55:26.852Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T08:55:48.135Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 400,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T08:57:49.215Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 400,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T08:57:50.598Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 400,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T08:59:21.471Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 400,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T09:00:40.821Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 400,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T09:00:42.136Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 400,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T09:00:42.761Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 400,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T09:00:43.614Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 400,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T09:00:44.161Z'
}
{
  userId: 2,
  url: '/permissions/100',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 404,
  message: 'Permissions not found',
  level: 'error',
  timestamp: '2023-08-28T09:00:55.713Z'
}
{
  userId: 2,
  url: '/permissions/100',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 404,
  message: 'Permissions not found',
  level: 'error',
  timestamp: '2023-08-28T09:00:57.412Z'
}
{
  userId: 2,
  url: '/permissions/100',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 404,
  message: 'Permissions not found',
  level: 'error',
  timestamp: '2023-08-28T09:01:07.572Z'
}
{
  userId: 2,
  url: '/permissions/1',
  body: { name: 'players', permissions: [ 'get' ] },
  query: {},
  status: 400,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Permissions_name_key`',
  level: 'error',
  timestamp: '2023-08-28T09:01:11.427Z'
}
{
  userId: 2,
  url: '/roles/1',
  body: {},
  query: {},
  status: 404,
  message: 'Roles not found',
  level: 'error',
  timestamp: '2023-08-28T10:23:17.472Z'
}
{
  userId: 2,
  url: '/roles/1',
  body: {},
  query: {},
  status: 404,
  message: 'Roles not found',
  level: 'error',
  timestamp: '2023-08-28T10:23:18.690Z'
}
{
  userId: 2,
  url: '/roles/2',
  body: {},
  query: {},
  status: 404,
  message: 'Roles not found',
  level: 'error',
  timestamp: '2023-08-28T10:23:22.002Z'
}
{
  userId: 2,
  url: '/roles/2',
  body: {},
  query: {},
  status: 404,
  message: 'Roles not found',
  level: 'error',
  timestamp: '2023-08-28T10:23:48.454Z'
}
{
  userId: 2,
  url: '/roles/1',
  body: {},
  query: {},
  status: 404,
  message: 'Roles not found',
  level: 'error',
  timestamp: '2023-08-28T10:23:52.234Z'
}
{
  userId: 2,
  url: '/roles/2',
  body: {
    name: 'users',
    permissions: {
      users: [ 'get', 'getById', 'update', 'create', 'delete' ],
      permissions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      agents: [ 'get', 'getById', 'update', 'create', 'delete' ],
      roles: [ 'get', 'getById', 'update', 'create', 'delete' ],
      transactions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      players: [ 'get', 'getById', 'update', 'create', 'delete' ],
      currencies: [ 'get', 'getById', 'update', 'create', 'delete' ],
      games: [ 'get', 'getById', 'update', 'create', 'delete' ]
    }
  },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'An operation failed because it depends on one or more records that were required but not found. Record to update not found.',
  level: 'error',
  timestamp: '2023-08-28T10:41:40.261Z'
}
{
  userId: 2,
  url: '/roles/2',
  body: {
    name: 'users',
    permissions: {
      users: [ 'get', 'getById', 'update', 'create', 'delete' ],
      permissions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      agents: [ 'get', 'getById', 'update', 'create', 'delete' ],
      roles: [ 'get', 'getById', 'update', 'create', 'delete' ],
      transactions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      players: [ 'get', 'getById', 'update', 'create', 'delete' ],
      currencies: [ 'get', 'getById', 'update', 'create', 'delete' ],
      games: [ 'get', 'getById', 'update', 'create', 'delete' ]
    }
  },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'An operation failed because it depends on one or more records that were required but not found. Record to update not found.',
  level: 'error',
  timestamp: '2023-08-28T10:41:42.354Z'
}
{
  userId: 2,
  url: '/roles/2',
  body: {
    name: 'users',
    permissions: {
      users: [ 'get', 'getById', 'update', 'create', 'delete' ],
      permissions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      agents: [ 'get', 'getById', 'update', 'create', 'delete' ],
      roles: [ 'get', 'getById', 'update', 'create', 'delete' ],
      transactions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      players: [ 'get', 'getById', 'update', 'create', 'delete' ],
      currencies: [ 'get', 'getById', 'update', 'create', 'delete' ],
      games: [ 'get', 'getById', 'update', 'create', 'delete' ]
    }
  },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'An operation failed because it depends on one or more records that were required but not found. Record to update not found.',
  level: 'error',
  timestamp: '2023-08-28T10:41:51.213Z'
}
{
  userId: 2,
  url: '/roles/2',
  body: {
    name: 'users',
    permissions: {
      users: [ 'get', 'getById', 'update', 'create', 'delete' ],
      permissions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      agents: [ 'get', 'getById', 'update', 'create', 'delete' ],
      roles: [ 'get', 'getById', 'update', 'create', 'delete' ],
      transactions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      players: [ 'get', 'getById', 'update', 'create', 'delete' ],
      currencies: [ 'get', 'getById', 'update', 'create', 'delete' ],
      games: [ 'get', 'getById', 'update', 'create', 'delete' ]
    }
  },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'An operation failed because it depends on one or more records that were required but not found. Record to update not found.',
  level: 'error',
  timestamp: '2023-08-28T10:42:46.190Z'
}
{
  userId: 2,
  url: '/roles/2',
  body: {
    name: 'users',
    permissions: {
      users: [ 'get', 'getById', 'update', 'create', 'delete' ],
      permissions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      agents: [ 'get', 'getById', 'update', 'create', 'delete' ],
      roles: [ 'get', 'getById', 'update', 'create', 'delete' ],
      transactions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      players: [ 'get', 'getById', 'update', 'create', 'delete' ],
      currencies: [ 'get', 'getById', 'update', 'create', 'delete' ],
      games: [ 'get', 'getById', 'update', 'create', 'delete' ]
    }
  },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'An operation failed because it depends on one or more records that were required but not found. Record to update not found.',
  level: 'error',
  timestamp: '2023-08-28T10:42:58.874Z'
}
{
  userId: 2,
  url: '/roles/2',
  body: {
    name: 'users',
    permissions: {
      users: [ 'get', 'getById', 'update', 'create', 'delete' ],
      permissions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      agents: [ 'get', 'getById', 'update', 'create', 'delete' ],
      roles: [ 'get', 'getById', 'update', 'create', 'delete' ],
      transactions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      players: [ 'get', 'getById', 'update', 'create', 'delete' ],
      currencies: [ 'get', 'getById', 'update', 'create', 'delete' ],
      games: [ 'get', 'getById', 'update', 'create', 'delete' ]
    }
  },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'An operation failed because it depends on one or more records that were required but not found. Record to update not found.',
  level: 'error',
  timestamp: '2023-08-28T10:42:59.676Z'
}
{
  userId: 2,
  url: '/roles/2',
  body: {
    name: 'users',
    permissions: {
      users: [ 'get', 'getById', 'update', 'create', 'delete' ],
      permissions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      agents: [ 'get', 'getById', 'update', 'create', 'delete' ],
      roles: [ 'get', 'getById', 'update', 'create', 'delete' ],
      transactions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      players: [ 'get', 'getById', 'update', 'create', 'delete' ],
      currencies: [ 'get', 'getById', 'update', 'create', 'delete' ],
      games: [ 'get', 'getById', 'update', 'create', 'delete' ]
    }
  },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'An operation failed because it depends on one or more records that were required but not found. Record to update not found.',
  level: 'error',
  timestamp: '2023-08-28T10:43:21.411Z'
}
{
  userId: 2,
  url: '/roles/2',
  body: {
    name: 'users',
    permissions: {
      users: [ 'get', 'getById', 'update', 'create', 'delete' ],
      permissions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      agents: [ 'get', 'getById', 'update', 'create', 'delete' ],
      roles: [ 'get', 'getById', 'update', 'create', 'delete' ],
      transactions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      players: [ 'get', 'getById', 'update', 'create', 'delete' ],
      currencies: [ 'get', 'getById', 'update', 'create', 'delete' ],
      games: [ 'get', 'getById', 'update', 'create', 'delete' ]
    }
  },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'An operation failed because it depends on one or more records that were required but not found. Record to update not found.',
  level: 'error',
  timestamp: '2023-08-28T10:43:33.374Z'
}
{
  userId: 2,
  url: '/roles/2',
  body: {
    name: 'users',
    permissions: {
      users: [ 'get', 'getById', 'update', 'create', 'delete' ],
      permissions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      agents: [ 'get', 'getById', 'update', 'create', 'delete' ],
      roles: [ 'get', 'getById', 'update', 'create', 'delete' ],
      transactions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      players: [ 'get', 'getById', 'update', 'create', 'delete' ],
      currencies: [ 'get', 'getById', 'update', 'create', 'delete' ],
      games: [ 'get', 'getById', 'update', 'create', 'delete' ]
    }
  },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'An operation failed because it depends on one or more records that were required but not found. Record to update not found.',
  level: 'error',
  timestamp: '2023-08-28T10:44:43.150Z'
}
{
  userId: 2,
  url: '/roles/2',
  body: {
    name: 'users',
    permissions: {
      users: [ 'get', 'getById', 'update', 'create', 'delete' ],
      permissions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      agents: [ 'get', 'getById', 'update', 'create', 'delete' ],
      roles: [ 'get', 'getById', 'update', 'create', 'delete' ],
      transactions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      players: [ 'get', 'getById', 'update', 'create', 'delete' ],
      currencies: [ 'get', 'getById', 'update', 'create', 'delete' ],
      games: [ 'get', 'getById', 'update', 'create', 'delete' ]
    }
  },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'An operation failed because it depends on one or more records that were required but not found. Record to update not found.',
  level: 'error',
  timestamp: '2023-08-28T10:44:51.298Z'
}
{
  userId: 2,
  url: '/roles/2',
  body: {
    name: 'users',
    permissions: {
      users: [ 'get', 'getById', 'update', 'create', 'delete' ],
      permissions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      agents: [ 'get', 'getById', 'update', 'create', 'delete' ],
      roles: [ 'get', 'getById', 'update', 'create', 'delete' ],
      transactions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      players: [ 'get', 'getById', 'update', 'create', 'delete' ],
      currencies: [ 'get', 'getById', 'update', 'create', 'delete' ],
      games: [ 'get', 'getById', 'update', 'create', 'delete' ]
    }
  },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'An operation failed because it depends on one or more records that were required but not found. Record to update not found.',
  level: 'error',
  timestamp: '2023-08-28T10:45:17.196Z'
}
{
  userId: 2,
  url: '/roles/2',
  body: {
    name: 'users',
    permissions: {
      users: [ 'get', 'getById', 'update', 'create', 'delete' ],
      permissions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      agents: [ 'get', 'getById', 'update', 'create', 'delete' ],
      roles: [ 'get', 'getById', 'update', 'create', 'delete' ],
      transactions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      players: [ 'get', 'getById', 'update', 'create', 'delete' ],
      currencies: [ 'get', 'getById', 'update', 'create', 'delete' ],
      games: [ 'get', 'getById', 'update', 'create', 'delete' ]
    }
  },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'An operation failed because it depends on one or more records that were required but not found. Record to update not found.',
  level: 'error',
  timestamp: '2023-08-28T10:45:32.448Z'
}
{
  userId: 2,
  url: '/roles/2',
  body: {
    name: 'users2',
    permissions: {
      users: [ 'get', 'getById', 'update', 'create', 'delete' ],
      permissions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      agents: [ 'get', 'getById', 'update', 'create', 'delete' ],
      roles: [ 'get', 'getById', 'update', 'create', 'delete' ],
      transactions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      players: [ 'get', 'getById', 'update', 'create', 'delete' ],
      currencies: [ 'get', 'getById', 'update', 'create', 'delete' ],
      games: [ 'get', 'getById', 'update', 'create', 'delete' ]
    }
  },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'An operation failed because it depends on one or more records that were required but not found. Record to update not found.',
  level: 'error',
  timestamp: '2023-08-28T10:45:37.268Z'
}
{
  userId: 2,
  url: '/roles/2',
  body: {
    name: 'users2',
    permissions: {
      users: [ 'get', 'getById', 'update', 'create', 'delete' ],
      permissions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      agents: [ 'get', 'getById', 'update', 'create', 'delete' ],
      roles: [ 'get', 'getById', 'update', 'create', 'delete' ],
      transactions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      players: [ 'get', 'getById', 'update', 'create', 'delete' ],
      currencies: [ 'get', 'getById', 'update', 'create', 'delete' ],
      games: [ 'get', 'getById', 'update', 'create', 'delete' ]
    }
  },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'An operation failed because it depends on one or more records that were required but not found. Record to update not found.',
  level: 'error',
  timestamp: '2023-08-28T10:45:38.563Z'
}
{
  userId: 2,
  url: '/roles/2',
  body: {
    name: 'users',
    permissions: {
      users: [ 'get', 'getById', 'update', 'create', 'delete' ],
      permissions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      agents: [ 'get', 'getById', 'update', 'create', 'delete' ],
      roles: [ 'get', 'getById', 'update', 'create', 'delete' ],
      transactions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      players: [ 'get', 'getById', 'update', 'create', 'delete' ],
      currencies: [ 'get', 'getById', 'update', 'create', 'delete' ],
      games: [ 'get', 'getById', 'update', 'create', 'delete' ]
    }
  },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'An operation failed because it depends on one or more records that were required but not found. Record to update not found.',
  level: 'error',
  timestamp: '2023-08-28T10:46:00.156Z'
}
{
  userId: 2,
  url: '/roles/2',
  body: {
    name: 'users',
    permissions: {
      users: [ 'get', 'getById', 'update', 'create', 'delete' ],
      permissions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      agents: [ 'get', 'getById', 'update', 'create', 'delete' ],
      roles: [ 'get', 'getById', 'update', 'create', 'delete' ],
      transactions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      players: [ 'get', 'getById', 'update', 'create', 'delete' ],
      currencies: [ 'get', 'getById', 'update', 'create', 'delete' ],
      games: [ 'get', 'getById', 'update', 'create', 'delete' ]
    }
  },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'An operation failed because it depends on one or more records that were required but not found. Record to update not found.',
  level: 'error',
  timestamp: '2023-08-28T10:46:22.219Z'
}
{
  userId: 2,
  url: '/roles/2',
  body: {
    name: 'users',
    permissions: {
      users: [ 'get', 'getById', 'update', 'create', 'delete' ],
      permissions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      agents: [ 'get', 'getById', 'update', 'create', 'delete' ],
      roles: [ 'get', 'getById', 'update', 'create', 'delete' ],
      transactions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      players: [ 'get', 'getById', 'update', 'create', 'delete' ],
      currencies: [ 'get', 'getById', 'update', 'create', 'delete' ],
      games: [ 'get', 'getById', 'update', 'create', 'delete' ]
    }
  },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'An operation failed because it depends on one or more records that were required but not found. Record to update not found.',
  level: 'error',
  timestamp: '2023-08-28T10:46:23.032Z'
}
{
  userId: 2,
  url: '/roles/2',
  body: {
    name: 'users',
    permissions: {
      users: [ 'get', 'getById', 'update', 'create', 'delete' ],
      permissions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      agents: [ 'get', 'getById', 'update', 'create', 'delete' ],
      roles: [ 'get', 'getById', 'update', 'create', 'delete' ],
      transactions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      players: [ 'get', 'getById', 'update', 'create', 'delete' ],
      currencies: [ 'get', 'getById', 'update', 'create', 'delete' ],
      games: [ 'get', 'getById', 'update', 'create', 'delete' ]
    }
  },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'An operation failed because it depends on one or more records that were required but not found. Record to update not found.',
  level: 'error',
  timestamp: '2023-08-28T10:46:41.163Z'
}
{
  userId: 2,
  url: '/roles/2',
  body: {
    name: 'users',
    permissions: {
      users: [ 'get', 'getById', 'update', 'create', 'delete' ],
      permissions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      agents: [ 'get', 'getById', 'update', 'create', 'delete' ],
      roles: [ 'get', 'getById', 'update', 'create', 'delete' ],
      transactions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      players: [ 'get', 'getById', 'update', 'create', 'delete' ],
      currencies: [ 'get', 'getById', 'update', 'create', 'delete' ],
      games: [ 'get', 'getById', 'update', 'create', 'delete' ]
    }
  },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'An operation failed because it depends on one or more records that were required but not found. Record to update not found.',
  level: 'error',
  timestamp: '2023-08-28T10:46:58.174Z'
}
{
  userId: 2,
  url: '/roles/2',
  body: {
    name: 'users',
    permissions: {
      users: [ 'get', 'getById', 'update', 'create', 'delete' ],
      permissions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      agents: [ 'get', 'getById', 'update', 'create', 'delete' ],
      roles: [ 'get', 'getById', 'update', 'create', 'delete' ],
      transactions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      players: [ 'get', 'getById', 'update', 'create', 'delete' ],
      currencies: [ 'get', 'getById', 'update', 'create', 'delete' ],
      games: [ 'get', 'getById', 'update', 'create', 'delete' ]
    }
  },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'An operation failed because it depends on one or more records that were required but not found. Record to update not found.',
  level: 'error',
  timestamp: '2023-08-28T10:47:05.711Z'
}
{
  userId: 2,
  url: '/roles/2',
  body: {
    name: 'users',
    permissions: {
      users: [ 'get', 'getById', 'update', 'create', 'delete' ],
      permissions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      agents: [ 'get', 'getById', 'update', 'create', 'delete' ],
      roles: [ 'get', 'getById', 'update', 'create', 'delete' ],
      transactions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      players: [ 'get', 'getById', 'update', 'create', 'delete' ],
      currencies: [ 'get', 'getById', 'update', 'create', 'delete' ],
      games: [ 'get', 'getById', 'update', 'create', 'delete' ]
    }
  },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'An operation failed because it depends on one or more records that were required but not found. Record to update not found.',
  level: 'error',
  timestamp: '2023-08-28T10:47:26.509Z'
}
{
  userId: 2,
  url: '/roles/2',
  body: {
    name: 'users',
    permissions: {
      users: [ 'get', 'getById', 'update', 'create', 'delete' ],
      permissions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      agents: [ 'get', 'getById', 'update', 'create', 'delete' ],
      roles: [ 'get', 'getById', 'update', 'create', 'delete' ],
      transactions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      players: [ 'get', 'getById', 'update', 'create', 'delete' ],
      currencies: [ 'get', 'getById', 'update', 'create', 'delete' ],
      games: [ 'get', 'getById', 'update', 'create', 'delete' ]
    }
  },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'An operation failed because it depends on one or more records that were required but not found. Record to update not found.',
  level: 'error',
  timestamp: '2023-08-28T10:47:27.286Z'
}
{
  userId: 2,
  url: '/roles/3',
  body: {
    name: 'users',
    permissions: {
      users: [ 'get', 'getById', 'update', 'create', 'delete' ],
      permissions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      agents: [ 'get', 'getById', 'update', 'create', 'delete' ],
      roles: [ 'get', 'getById', 'update', 'create', 'delete' ],
      transactions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      players: [ 'get', 'getById', 'update', 'create', 'delete' ],
      currencies: [ 'get', 'getById', 'update', 'create', 'delete' ],
      games: [ 'get', 'getById', 'update', 'create', 'delete' ]
    }
  },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'An operation failed because it depends on one or more records that were required but not found. Record to update not found.',
  level: 'error',
  timestamp: '2023-08-28T10:47:53.259Z'
}
{
  userId: 2,
  url: '/roles/3',
  body: {
    name: 'users',
    permissions: {
      users: [ 'get', 'getById', 'update', 'create', 'delete' ],
      permissions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      agents: [ 'get', 'getById', 'update', 'create', 'delete' ],
      roles: [ 'get', 'getById', 'update', 'create', 'delete' ],
      transactions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      players: [ 'get', 'getById', 'update', 'create', 'delete' ],
      currencies: [ 'get', 'getById', 'update', 'create', 'delete' ],
      games: [ 'get', 'getById', 'update', 'create', 'delete' ]
    }
  },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'An operation failed because it depends on one or more records that were required but not found. Record to update not found.',
  level: 'error',
  timestamp: '2023-08-28T10:47:54.752Z'
}
{
  userId: 2,
  url: '/roles/3',
  body: {
    name: 'users',
    permissions: {
      users: [ 'get', 'getById', 'update', 'create', 'delete' ],
      permissions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      agents: [ 'get', 'getById', 'update', 'create', 'delete' ],
      roles: [ 'get', 'getById', 'update', 'create', 'delete' ],
      transactions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      players: [ 'get', 'getById', 'update', 'create', 'delete' ],
      currencies: [ 'get', 'getById', 'update', 'create', 'delete' ],
      games: [ 'get', 'getById', 'update', 'create', 'delete' ]
    }
  },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'An operation failed because it depends on one or more records that were required but not found. Record to update not found.',
  level: 'error',
  timestamp: '2023-08-28T10:48:04.243Z'
}
{
  userId: 2,
  url: '/roles/3',
  body: {
    name: 'users',
    permissions: {
      users: [ 'get', 'getById', 'update', 'create', 'delete' ],
      permissions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      agents: [ 'get', 'getById', 'update', 'create', 'delete' ],
      roles: [ 'get', 'getById', 'update', 'create', 'delete' ],
      transactions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      players: [ 'get', 'getById', 'update', 'create', 'delete' ],
      currencies: [ 'get', 'getById', 'update', 'create', 'delete' ],
      games: [ 'get', 'getById', 'update', 'create', 'delete' ]
    }
  },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'An operation failed because it depends on one or more records that were required but not found. Record to update not found.',
  level: 'error',
  timestamp: '2023-08-28T10:48:18.884Z'
}
{
  userId: 2,
  url: '/roles/3',
  body: {
    name: 'users',
    permissions: {
      users: [ 'get', 'getById', 'update', 'create', 'delete' ],
      permissions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      agents: [ 'get', 'getById', 'update', 'create', 'delete' ],
      roles: [ 'get', 'getById', 'update', 'create', 'delete' ],
      transactions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      players: [ 'get', 'getById', 'update', 'create', 'delete' ],
      currencies: [ 'get', 'getById', 'update', 'create', 'delete' ],
      games: [ 'get', 'getById', 'update', 'create', 'delete' ]
    }
  },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'An operation failed because it depends on one or more records that were required but not found. Record to update not found.',
  level: 'error',
  timestamp: '2023-08-28T10:48:19.589Z'
}
{
  userId: 2,
  url: '/roles/3',
  body: {
    name: 'users',
    permissions: {
      users: [ 'get', 'getById', 'update', 'create', 'delete' ],
      permissions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      agents: [ 'get', 'getById', 'update', 'create', 'delete' ],
      roles: [ 'get', 'getById', 'update', 'create', 'delete' ],
      transactions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      players: [ 'get', 'getById', 'update', 'create', 'delete' ],
      currencies: [ 'get', 'getById', 'update', 'create', 'delete' ],
      games: [ 'get', 'getById', 'update', 'create', 'delete' ]
    }
  },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'An operation failed because it depends on one or more records that were required but not found. Record to update not found.',
  level: 'error',
  timestamp: '2023-08-28T10:48:25.977Z'
}
{
  userId: 2,
  url: '/roles/3',
  body: {
    name: 'users',
    permissions: {
      users: [ 'get', 'getById', 'update', 'create', 'delete' ],
      permissions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      agents: [ 'get', 'getById', 'update', 'create', 'delete' ],
      roles: [ 'get', 'getById', 'update', 'create', 'delete' ],
      transactions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      players: [ 'get', 'getById', 'update', 'create', 'delete' ],
      currencies: [ 'get', 'getById', 'update', 'create', 'delete' ],
      games: [ 'get', 'getById', 'update', 'create', 'delete' ]
    }
  },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'An operation failed because it depends on one or more records that were required but not found. Record to update not found.',
  level: 'error',
  timestamp: '2023-08-28T10:48:39.794Z'
}
{
  userId: 2,
  url: '/roles/3',
  body: {
    name: 'users',
    permissions: {
      users: [ 'get', 'getById', 'update', 'create', 'delete' ],
      permissions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      agents: [ 'get', 'getById', 'update', 'create', 'delete' ],
      roles: [ 'get', 'getById', 'update', 'create', 'delete' ],
      transactions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      players: [ 'get', 'getById', 'update', 'create', 'delete' ],
      currencies: [ 'get', 'getById', 'update', 'create', 'delete' ],
      games: [ 'get', 'getById', 'update', 'create', 'delete' ]
    }
  },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'An operation failed because it depends on one or more records that were required but not found. Record to update not found.',
  level: 'error',
  timestamp: '2023-08-28T10:48:56.042Z'
}
{
  userId: 2,
  url: '/roles/3',
  body: {
    name: 'users',
    permissions: {
      users: [ 'get', 'getById', 'update', 'create', 'delete' ],
      permissions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      agents: [ 'get', 'getById', 'update', 'create', 'delete' ],
      roles: [ 'get', 'getById', 'update', 'create', 'delete' ],
      transactions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      players: [ 'get', 'getById', 'update', 'create', 'delete' ],
      currencies: [ 'get', 'getById', 'update', 'create', 'delete' ],
      games: [ 'get', 'getById', 'update', 'create', 'delete' ]
    }
  },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'An operation failed because it depends on one or more records that were required but not found. Record to update not found.',
  level: 'error',
  timestamp: '2023-08-28T10:48:56.676Z'
}
{
  userId: 2,
  url: '/roles/3',
  body: {
    name: 'users',
    permissions: {
      users: [ 'get', 'getById', 'update', 'create', 'delete' ],
      permissions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      agents: [ 'get', 'getById', 'update', 'create', 'delete' ],
      roles: [ 'get', 'getById', 'update', 'create', 'delete' ],
      transactions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      players: [ 'get', 'getById', 'update', 'create', 'delete' ],
      currencies: [ 'get', 'getById', 'update', 'create', 'delete' ],
      games: [ 'get', 'getById', 'update', 'create', 'delete' ]
    }
  },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'An operation failed because it depends on one or more records that were required but not found. Record to update not found.',
  level: 'error',
  timestamp: '2023-08-28T10:50:33.112Z'
}
{
  userId: 2,
  url: '/roles/3',
  body: {
    name: 'users',
    permissions: {
      users: [ 'get', 'getById', 'update', 'create', 'delete' ],
      permissions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      agents: [ 'get', 'getById', 'update', 'create', 'delete' ],
      roles: [ 'get', 'getById', 'update', 'create', 'delete' ],
      transactions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      players: [ 'get', 'getById', 'update', 'create', 'delete' ],
      currencies: [ 'get', 'getById', 'update', 'create', 'delete' ],
      games: [ 'get', 'getById', 'update', 'create', 'delete' ]
    }
  },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'An operation failed because it depends on one or more records that were required but not found. Record to update not found.',
  level: 'error',
  timestamp: '2023-08-28T10:50:33.941Z'
}
{
  userId: 2,
  url: '/roles/3',
  body: {
    name: 'users',
    permissions: {
      users: [ 'get', 'getById', 'update', 'create', 'delete' ],
      permissions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      agents: [ 'get', 'getById', 'update', 'create', 'delete' ],
      roles: [ 'get', 'getById', 'update', 'create', 'delete' ],
      transactions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      players: [ 'get', 'getById', 'update', 'create', 'delete' ],
      currencies: [ 'get', 'getById', 'update', 'create', 'delete' ],
      games: [ 'get', 'getById', 'update', 'create', 'delete' ]
    }
  },
  query: {},
  status: 404,
  message: 'Roles not found',
  level: 'error',
  timestamp: '2023-08-28T10:50:42.986Z'
}
{
  userId: 2,
  url: '/roles/3',
  body: {
    name: 'users',
    permissions: {
      users: [ 'get', 'getById', 'update', 'create', 'delete' ],
      permissions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      agents: [ 'get', 'getById', 'update', 'create', 'delete' ],
      roles: [ 'get', 'getById', 'update', 'create', 'delete' ],
      transactions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      players: [ 'get', 'getById', 'update', 'create', 'delete' ],
      currencies: [ 'get', 'getById', 'update', 'create', 'delete' ],
      games: [ 'get', 'getById', 'update', 'create', 'delete' ]
    }
  },
  query: {},
  status: 404,
  message: 'Roles not found',
  level: 'error',
  timestamp: '2023-08-28T10:50:44.111Z'
}
{
  userId: 2,
  url: '/roles/4',
  body: {
    name: 'users',
    permissions: {
      users: [ 'get', 'getById', 'update', 'create', 'delete' ],
      permissions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      agents: [ 'get', 'getById', 'update', 'create', 'delete' ],
      roles: [ 'get', 'getById', 'update', 'create', 'delete' ],
      transactions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      players: [ 'get', 'getById', 'update', 'create', 'delete' ],
      currencies: [ 'get', 'getById', 'update', 'create', 'delete' ],
      games: [ 'get', 'getById', 'update', 'create', 'delete' ]
    }
  },
  query: {},
  status: 404,
  message: 'Roles not found',
  level: 'error',
  timestamp: '2023-08-28T10:50:57.511Z'
}
{
  userId: 2,
  url: '/roles/3',
  body: {
    name: 'users',
    permissions: {
      users: [ 'get', 'getById', 'update', 'create', 'delete' ],
      permissions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      agents: [ 'get', 'getById', 'update', 'create', 'delete' ],
      roles: [ 'get', 'getById', 'update', 'create', 'delete' ],
      transactions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      players: [ 'get', 'getById', 'update', 'create', 'delete' ],
      currencies: [ 'get', 'getById', 'update', 'create', 'delete' ],
      games: [ 'get', 'getById', 'update', 'create', 'delete' ]
    }
  },
  query: {},
  status: 404,
  message: 'Roles not found',
  level: 'error',
  timestamp: '2023-08-28T10:51:34.390Z'
}
{
  userId: 2,
  url: '/roles/3',
  body: {
    name: 'users',
    permissions: {
      users: [ 'get', 'getById', 'update', 'create', 'delete' ],
      permissions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      agents: [ 'get', 'getById', 'update', 'create', 'delete' ],
      roles: [ 'get', 'getById', 'update', 'create', 'delete' ],
      transactions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      players: [ 'get', 'getById', 'update', 'create', 'delete' ],
      currencies: [ 'get', 'getById', 'update', 'create', 'delete' ],
      games: [ 'get', 'getById', 'update', 'create', 'delete' ]
    }
  },
  query: {},
  status: 404,
  message: 'Roles not found',
  level: 'error',
  timestamp: '2023-08-28T10:51:35.565Z'
}
{
  userId: 2,
  url: '/roles/3',
  body: {
    name: 'users',
    permissions: {
      users: [ 'get', 'getById', 'update', 'create', 'delete' ],
      permissions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      agents: [ 'get', 'getById', 'update', 'create', 'delete' ],
      roles: [ 'get', 'getById', 'update', 'create', 'delete' ],
      transactions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      players: [ 'get', 'getById', 'update', 'create', 'delete' ],
      currencies: [ 'get', 'getById', 'update', 'create', 'delete' ],
      games: [ 'get', 'getById', 'update', 'create', 'delete' ]
    }
  },
  query: {},
  status: 404,
  message: 'Roles not found',
  level: 'error',
  timestamp: '2023-08-28T10:51:36.197Z'
}
{
  userId: 2,
  url: '/roles/3',
  body: {
    name: 'users',
    permissions: {
      users: [ 'get', 'getById', 'update', 'create', 'delete' ],
      permissions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      agents: [ 'get', 'getById', 'update', 'create', 'delete' ],
      roles: [ 'get', 'getById', 'update', 'create', 'delete' ],
      transactions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      players: [ 'get', 'getById', 'update', 'create', 'delete' ],
      currencies: [ 'get', 'getById', 'update', 'create', 'delete' ],
      games: [ 'get', 'getById', 'update', 'create', 'delete' ]
    }
  },
  query: {},
  status: 404,
  message: 'Roles not found',
  level: 'error',
  timestamp: '2023-08-28T10:51:36.855Z'
}
{
  userId: 2,
  url: '/roles/3',
  body: {
    name: 'users',
    permissions: {
      users: [ 'get', 'getById', 'update', 'create', 'delete' ],
      permissions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      agents: [ 'get', 'getById', 'update', 'create', 'delete' ],
      roles: [ 'get', 'getById', 'update', 'create', 'delete' ],
      transactions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      players: [ 'get', 'getById', 'update', 'create', 'delete' ],
      currencies: [ 'get', 'getById', 'update', 'create', 'delete' ],
      games: [ 'get', 'getById', 'update', 'create', 'delete' ]
    }
  },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'An operation failed because it depends on one or more records that were required but not found. Record to update not found.',
  level: 'error',
  timestamp: '2023-08-28T10:52:12.034Z'
}
{
  userId: 2,
  url: '/roles/3',
  body: {
    name: 'users',
    permissions: {
      users: [ 'get', 'getById', 'update', 'create', 'delete' ],
      permissions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      agents: [ 'get', 'getById', 'update', 'create', 'delete' ],
      roles: [ 'get', 'getById', 'update', 'create', 'delete' ],
      transactions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      players: [ 'get', 'getById', 'update', 'create', 'delete' ],
      currencies: [ 'get', 'getById', 'update', 'create', 'delete' ],
      games: [ 'get', 'getById', 'update', 'create', 'delete' ]
    }
  },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'An operation failed because it depends on one or more records that were required but not found. Record to update not found.',
  level: 'error',
  timestamp: '2023-08-28T10:52:12.882Z'
}
{
  userId: 2,
  url: '/roles/3',
  body: {
    name: 'users',
    permissions: {
      users: [ 'get', 'getById', 'update', 'create', 'delete' ],
      permissions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      agents: [ 'get', 'getById', 'update', 'create', 'delete' ],
      roles: [ 'get', 'getById', 'update', 'create', 'delete' ],
      transactions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      players: [ 'get', 'getById', 'update', 'create', 'delete' ],
      currencies: [ 'get', 'getById', 'update', 'create', 'delete' ],
      games: [ 'get', 'getById', 'update', 'create', 'delete' ]
    }
  },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'An operation failed because it depends on one or more records that were required but not found. Record to update not found.',
  level: 'error',
  timestamp: '2023-08-28T10:52:18.936Z'
}
{
  userId: 2,
  url: '/roles/3',
  body: {
    name: 'users',
    permissions: {
      users: [ 'get', 'getById', 'update', 'create', 'delete' ],
      permissions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      agents: [ 'get', 'getById', 'update', 'create', 'delete' ],
      roles: [ 'get', 'getById', 'update', 'create', 'delete' ],
      transactions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      players: [ 'get', 'getById', 'update', 'create', 'delete' ],
      currencies: [ 'get', 'getById', 'update', 'create', 'delete' ],
      games: [ 'get', 'getById', 'update', 'create', 'delete' ]
    }
  },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'An operation failed because it depends on one or more records that were required but not found. Record to update not found.',
  level: 'error',
  timestamp: '2023-08-28T10:52:19.519Z'
}
{
  userId: 2,
  url: '/roles/3',
  body: {
    name: 'users',
    permissions: {
      users: [ 'get', 'getById', 'update', 'create', 'delete' ],
      permissions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      agents: [ 'get', 'getById', 'update', 'create', 'delete' ],
      roles: [ 'get', 'getById', 'update', 'create', 'delete' ],
      transactions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      players: [ 'get', 'getById', 'update', 'create', 'delete' ],
      currencies: [ 'get', 'getById', 'update', 'create', 'delete' ],
      games: [ 'get', 'getById', 'update', 'create', 'delete' ]
    }
  },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'An operation failed because it depends on one or more records that were required but not found. Record to update not found.',
  level: 'error',
  timestamp: '2023-08-28T10:53:32.836Z'
}
{
  userId: 2,
  url: '/roles/3',
  body: {
    name: 'users',
    permissions: {
      users: [ 'get', 'getById', 'update', 'create', 'delete' ],
      permissions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      agents: [ 'get', 'getById', 'update', 'create', 'delete' ],
      roles: [ 'get', 'getById', 'update', 'create', 'delete' ],
      transactions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      players: [ 'get', 'getById', 'update', 'create', 'delete' ],
      currencies: [ 'get', 'getById', 'update', 'create', 'delete' ],
      games: [ 'get', 'getById', 'update', 'create', 'delete' ]
    }
  },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'An operation failed because it depends on one or more records that were required but not found. Record to update not found.',
  level: 'error',
  timestamp: '2023-08-28T10:53:33.735Z'
}
{
  userId: 2,
  url: '/roles/3',
  body: {
    name: 'users',
    permissions: {
      users: [ 'get', 'getById', 'update', 'create', 'delete' ],
      permissions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      agents: [ 'get', 'getById', 'update', 'create', 'delete' ],
      roles: [ 'get', 'getById', 'update', 'create', 'delete' ],
      transactions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      players: [ 'get', 'getById', 'update', 'create', 'delete' ],
      currencies: [ 'get', 'getById', 'update', 'create', 'delete' ],
      games: [ 'get', 'getById', 'update', 'create', 'delete' ]
    }
  },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'An operation failed because it depends on one or more records that were required but not found. Record to update not found.',
  level: 'error',
  timestamp: '2023-08-28T10:53:42.727Z'
}
{
  userId: 2,
  url: '/roles/3',
  body: {
    name: 'users',
    permissions: {
      users: [ 'get', 'getById', 'update', 'create', 'delete' ],
      permissions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      agents: [ 'get', 'getById', 'update', 'create', 'delete' ],
      roles: [ 'get', 'getById', 'update', 'create', 'delete' ],
      transactions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      players: [ 'get', 'getById', 'update', 'create', 'delete' ],
      currencies: [ 'get', 'getById', 'update', 'create', 'delete' ],
      games: [ 'get', 'getById', 'update', 'create', 'delete' ]
    }
  },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'An operation failed because it depends on one or more records that were required but not found. Record to update not found.',
  level: 'error',
  timestamp: '2023-08-28T10:53:43.225Z'
}
{
  userId: 2,
  url: '/roles/3',
  body: {
    name: 'users',
    permissions: {
      users: [ 'get', 'getById', 'update', 'create', 'delete' ],
      permissions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      agents: [ 'get', 'getById', 'update', 'create', 'delete' ],
      roles: [ 'get', 'getById', 'update', 'create', 'delete' ],
      transactions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      players: [ 'get', 'getById', 'update', 'create', 'delete' ],
      currencies: [ 'get', 'getById', 'update', 'create', 'delete' ],
      games: [ 'get', 'getById', 'update', 'create', 'delete' ]
    }
  },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'An operation failed because it depends on one or more records that were required but not found. Record to update not found.',
  level: 'error',
  timestamp: '2023-08-28T10:53:49.983Z'
}
{
  userId: 2,
  url: '/roles/3',
  body: {
    name: 'users',
    permissions: {
      users: [ 'get', 'getById', 'update', 'create', 'delete' ],
      permissions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      agents: [ 'get', 'getById', 'update', 'create', 'delete' ],
      roles: [ 'get', 'getById', 'update', 'create', 'delete' ],
      transactions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      players: [ 'get', 'getById', 'update', 'create', 'delete' ],
      currencies: [ 'get', 'getById', 'update', 'create', 'delete' ],
      games: [ 'get', 'getById', 'update', 'create', 'delete' ]
    }
  },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'An operation failed because it depends on one or more records that were required but not found. Record to update not found.',
  level: 'error',
  timestamp: '2023-08-28T10:53:55.232Z'
}
{
  userId: 2,
  url: '/roles/3',
  body: {
    name: 'users',
    permissions: {
      users: [ 'get', 'getById', 'update', 'create', 'delete' ],
      permissions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      agents: [ 'get', 'getById', 'update', 'create', 'delete' ],
      roles: [ 'get', 'getById', 'update', 'create', 'delete' ],
      transactions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      players: [ 'get', 'getById', 'update', 'create', 'delete' ],
      currencies: [ 'get', 'getById', 'update', 'create', 'delete' ],
      games: [ 'get', 'getById', 'update', 'create', 'delete' ]
    }
  },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'An operation failed because it depends on one or more records that were required but not found. Record to update not found.',
  level: 'error',
  timestamp: '2023-08-28T10:54:20.515Z'
}
{
  userId: 2,
  url: '/roles/3',
  body: {
    name: 'users',
    permissions: {
      users: [ 'get', 'getById', 'update', 'create', 'delete' ],
      permissions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      agents: [ 'get', 'getById', 'update', 'create', 'delete' ],
      roles: [ 'get', 'getById', 'update', 'create', 'delete' ],
      transactions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      players: [ 'get', 'getById', 'update', 'create', 'delete' ],
      currencies: [ 'get', 'getById', 'update', 'create', 'delete' ],
      games: [ 'get', 'getById', 'update', 'create', 'delete' ]
    }
  },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'An operation failed because it depends on one or more records that were required but not found. Record to update not found.',
  level: 'error',
  timestamp: '2023-08-28T10:54:37.049Z'
}
{
  userId: 2,
  url: '/roles/3',
  body: {
    name: 'users',
    permissions: {
      users: [ 'get', 'getById', 'update', 'create', 'delete' ],
      permissions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      agents: [ 'get', 'getById', 'update', 'create', 'delete' ],
      roles: [ 'get', 'getById', 'update', 'create', 'delete' ],
      transactions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      players: [ 'get', 'getById', 'update', 'create', 'delete' ],
      currencies: [ 'get', 'getById', 'update', 'create', 'delete' ],
      games: [ 'get', 'getById', 'update', 'create', 'delete' ]
    }
  },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'An operation failed because it depends on one or more records that were required but not found. Record to update not found.',
  level: 'error',
  timestamp: '2023-08-28T10:54:37.882Z'
}
{
  userId: 2,
  url: '/roles/3',
  body: {
    name: 'users',
    permissions: {
      users: [ 'get', 'getById', 'update', 'create', 'delete' ],
      permissions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      agents: [ 'get', 'getById', 'update', 'create', 'delete' ],
      roles: [ 'get', 'getById', 'update', 'create', 'delete' ],
      transactions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      players: [ 'get', 'getById', 'update', 'create', 'delete' ],
      currencies: [ 'get', 'getById', 'update', 'create', 'delete' ],
      games: [ 'get', 'getById', 'update', 'create', 'delete' ]
    }
  },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'An operation failed because it depends on one or more records that were required but not found. Record to update not found.',
  level: 'error',
  timestamp: '2023-08-28T10:54:44.815Z'
}
{
  userId: 2,
  url: '/roles/3',
  body: {
    name: 'users',
    permissions: {
      users: [ 'get', 'getById', 'update', 'create', 'delete' ],
      permissions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      agents: [ 'get', 'getById', 'update', 'create', 'delete' ],
      roles: [ 'get', 'getById', 'update', 'create', 'delete' ],
      transactions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      players: [ 'get', 'getById', 'update', 'create', 'delete' ],
      currencies: [ 'get', 'getById', 'update', 'create', 'delete' ],
      games: [ 'get', 'getById', 'update', 'create', 'delete' ]
    }
  },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'An operation failed because it depends on one or more records that were required but not found. Record to update not found.',
  level: 'error',
  timestamp: '2023-08-28T10:54:45.765Z'
}
{
  userId: 2,
  url: '/roles/3',
  body: {
    name: 'users',
    permissions: {
      users: [ 'get', 'getById', 'update', 'create', 'delete' ],
      permissions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      agents: [ 'get', 'getById', 'update', 'create', 'delete' ],
      roles: [ 'get', 'getById', 'update', 'create', 'delete' ],
      transactions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      players: [ 'get', 'getById', 'update', 'create', 'delete' ],
      currencies: [ 'get', 'getById', 'update', 'create', 'delete' ],
      games: [ 'get', 'getById', 'update', 'create', 'delete' ]
    }
  },
  query: {},
  status: 404,
  message: 'Roles not found',
  level: 'error',
  timestamp: '2023-08-28T10:55:07.474Z'
}
{
  userId: 2,
  url: '/roles/3',
  body: {
    name: 'users',
    permissions: {
      users: [ 'get', 'getById', 'update', 'create', 'delete' ],
      permissions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      agents: [ 'get', 'getById', 'update', 'create', 'delete' ],
      roles: [ 'get', 'getById', 'update', 'create', 'delete' ],
      transactions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      players: [ 'get', 'getById', 'update', 'create', 'delete' ],
      currencies: [ 'get', 'getById', 'update', 'create', 'delete' ],
      games: [ 'get', 'getById', 'update', 'create', 'delete' ]
    }
  },
  query: {},
  status: 404,
  message: 'Roles not found',
  level: 'error',
  timestamp: '2023-08-28T10:55:08.309Z'
}
{
  userId: 2,
  url: '/roles/3',
  body: {
    name: 'users',
    permissions: {
      users: [ 'get', 'getById', 'update', 'create', 'delete' ],
      permissions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      agents: [ 'get', 'getById', 'update', 'create', 'delete' ],
      roles: [ 'get', 'getById', 'update', 'create', 'delete' ],
      transactions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      players: [ 'get', 'getById', 'update', 'create', 'delete' ],
      currencies: [ 'get', 'getById', 'update', 'create', 'delete' ],
      games: [ 'get', 'getById', 'update', 'create', 'delete' ]
    }
  },
  query: {},
  status: 500,
  message: '\n' +
    'Invalid `prisma.permissions.update()` invocation:\n' +
    '\n' +
    '\n' +
    'An operation failed because it depends on one or more records that were required but not found. Record to update not found.',
  level: 'error',
  timestamp: '2023-08-28T10:55:50.084Z'
}
{
  userId: 3,
  url: '/agents/1',
  body: { name: 'admin' },
  query: {},
  status: 400,
  message: 'Parent Agent not valid',
  level: 'error',
  timestamp: '2023-08-29T09:42:21.778Z'
}
{
  userId: 3,
  url: '/roles/undefined',
  body: {
    name: 'admin',
    permissions: {
      games: [ 'get', 'getById', 'update', 'create', 'delete' ],
      roles: [ 'get', 'getById', 'update', 'create', 'delete' ],
      users: [ 'get', 'getById', 'update', 'create', 'delete' ],
      agents: [ 'get', 'getById', 'update', 'create', 'delete' ],
      players: [ 'get', 'getById', 'update', 'create', 'delete' ],
      currencies: [ 'get', 'getById', 'update', 'create', 'delete' ],
      permissions: [],
      transactions: [ 'get', 'getById', 'update', 'create', 'delete' ]
    }
  },
  query: {},
  status: 400,
  message: 'Invalid Role Id',
  level: 'error',
  timestamp: '2023-08-29T09:47:26.697Z'
}
{
  userId: 3,
  url: '/roles',
  body: {
    name: '123',
    permissions: {
      users: [],
      permissions: [],
      agents: [],
      roles: [],
      transactions: [],
      players: [],
      currencies: [ 'get', 'update', 'delete', 'getById', 'create' ],
      games: []
    }
  },
  query: {},
  status: 400,
  message: 'WRONGTYPE Operation against a key holding the wrong kind of value',
  level: 'error',
  timestamp: '2023-08-29T10:11:47.198Z'
}
{
  userId: 3,
  url: '/roles',
  body: {
    name: 'asfasfasf',
    permissions: {
      users: [],
      permissions: [],
      agents: [],
      roles: [],
      transactions: [],
      players: [],
      currencies: [ 'get', 'update', 'delete', 'getById', 'create' ],
      games: []
    }
  },
  query: {},
  status: 400,
  message: 'WRONGTYPE Operation against a key holding the wrong kind of value',
  level: 'error',
  timestamp: '2023-08-29T10:14:30.577Z'
}
{
  userId: 3,
  url: '/roles',
  body: {
    name: 'asfasfasf',
    permissions: {
      users: [],
      permissions: [],
      agents: [],
      roles: [],
      transactions: [],
      players: [],
      currencies: [ 'get', 'update', 'delete', 'getById', 'create' ],
      games: []
    }
  },
  query: {},
  status: 400,
  message: 'Roles existed',
  level: 'error',
  timestamp: '2023-08-29T10:15:23.199Z'
}
{
  userId: 3,
  url: '/roles',
  body: {
    name: 'asfasfasf',
    permissions: {
      users: [],
      permissions: [],
      agents: [],
      roles: [],
      transactions: [],
      players: [],
      currencies: [ 'get', 'update', 'delete', 'getById', 'create' ],
      games: []
    }
  },
  query: {},
  status: 400,
  message: 'Roles existed',
  level: 'error',
  timestamp: '2023-08-29T10:15:26.013Z'
}
{
  userId: 3,
  url: '/roles',
  body: {
    name: 'asfasfasf',
    permissions: {
      users: [],
      permissions: [],
      agents: [],
      roles: [],
      transactions: [],
      players: [],
      currencies: [ 'get', 'update', 'delete', 'getById', 'create' ],
      games: []
    }
  },
  query: {},
  status: 400,
  message: 'Roles existed',
  level: 'error',
  timestamp: '2023-08-29T10:15:33.264Z'
}
{
  userId: 3,
  url: '/roles',
  body: {
    name: 'asfasfasf',
    permissions: {
      users: [],
      permissions: [],
      agents: [],
      roles: [],
      transactions: [],
      players: [],
      currencies: [ 'get', 'update', 'delete', 'getById', 'create' ],
      games: []
    }
  },
  query: {},
  status: 400,
  message: 'Roles existed',
  level: 'error',
  timestamp: '2023-08-29T10:15:52.244Z'
}
{
  userId: 3,
  url: '/roles',
  body: {
    name: 'xfgdfg',
    permissions: {
      users: [],
      permissions: [],
      agents: [],
      roles: [],
      transactions: [],
      players: [],
      currencies: [],
      games: []
    }
  },
  query: {},
  status: 400,
  message: 'WRONGTYPE Operation against a key holding the wrong kind of value',
  level: 'error',
  timestamp: '2023-08-29T10:16:50.071Z'
}
{
  userId: 3,
  url: '/roles',
  body: {
    name: 'xfgdfg',
    permissions: {
      users: [],
      permissions: [],
      agents: [],
      roles: [],
      transactions: [],
      players: [],
      currencies: [],
      games: []
    }
  },
  query: {},
  status: 400,
  message: 'Roles existed',
  level: 'error',
  timestamp: '2023-08-29T10:17:20.484Z'
}
{
  userId: 3,
  url: '/roles',
  body: {
    name: 'xfgdfgasdasd',
    permissions: {
      users: [],
      permissions: [],
      agents: [],
      roles: [],
      transactions: [],
      players: [],
      currencies: [],
      games: []
    }
  },
  query: {},
  status: 400,
  message: 'WRONGTYPE Operation against a key holding the wrong kind of value',
  level: 'error',
  timestamp: '2023-08-29T10:17:28.904Z'
}
{
  userId: 3,
  url: '/roles',
  body: {
    name: 'xfgdfgasdasd',
    permissions: {
      users: [],
      permissions: [],
      agents: [],
      roles: [],
      transactions: [],
      players: [],
      currencies: [],
      games: []
    }
  },
  query: {},
  status: 400,
  message: 'Roles existed',
  level: 'error',
  timestamp: '2023-08-29T10:17:35.714Z'
}
{
  userId: 3,
  url: '/roles',
  body: {
    name: 'sdgsdg',
    permissions: {
      users: [],
      permissions: [],
      agents: [],
      roles: [],
      transactions: [],
      players: [],
      currencies: [],
      games: []
    }
  },
  query: {},
  status: 400,
  message: 'JSON.parse(...).unshift is not a function',
  level: 'error',
  timestamp: '2023-08-29T10:22:09.080Z'
}
{
  userId: 3,
  url: '/roles',
  body: {
    name: 'sdgsdg',
    permissions: {
      users: [],
      permissions: [],
      agents: [],
      roles: [],
      transactions: [],
      players: [],
      currencies: [],
      games: []
    }
  },
  query: {},
  status: 400,
  message: 'Roles existed',
  level: 'error',
  timestamp: '2023-08-29T10:22:30.472Z'
}
{
  userId: 3,
  url: '/roles',
  body: {
    name: 'sdgsdg',
    permissions: {
      users: [],
      permissions: [],
      agents: [],
      roles: [],
      transactions: [],
      players: [],
      currencies: [],
      games: []
    }
  },
  query: {},
  status: 400,
  message: 'Roles existed',
  level: 'error',
  timestamp: '2023-08-29T10:22:36.554Z'
}
{
  userId: 3,
  url: '/roles',
  body: {
    name: 'sdgsdg',
    permissions: {
      users: [],
      permissions: [],
      agents: [],
      roles: [],
      transactions: [],
      players: [],
      currencies: [],
      games: []
    }
  },
  query: {},
  status: 400,
  message: 'Roles existed',
  level: 'error',
  timestamp: '2023-08-29T10:22:39.729Z'
}
{
  userId: 3,
  url: '/roles',
  body: {
    name: '1sdgsdg123',
    permissions: {
      users: [],
      permissions: [],
      agents: [],
      roles: [],
      transactions: [],
      players: [],
      currencies: [],
      games: []
    }
  },
  query: {},
  status: 400,
  message: 'JSON.parse(...).unshift is not a function',
  level: 'error',
  timestamp: '2023-08-29T10:22:44.311Z'
}
{
  userId: 1,
  url: '/roles',
  body: {
    name: 'distributor',
    permissions: {
      games: [ 'get', 'getById', 'update', 'create', 'delete' ],
      roles: [ 'get', 'getById', 'update', 'create', 'delete' ],
      users: [ 'get', 'getById', 'update', 'create', 'delete' ],
      agents: [ 'get', 'getById', 'update', 'create', 'delete' ],
      players: [],
      currencies: [ 'get', 'getById', 'update', 'create', 'delete' ],
      permissions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      transactions: [ 'get', 'update', 'delete' ]
    }
  },
  query: {},
  status: 400,
  message: 'Roles existed',
  level: 'error',
  timestamp: '2023-08-30T03:09:18.727Z'
}
{
  userId: 1,
  url: '/roles',
  body: {
    name: 'distributor',
    permissions: {
      games: [ 'get', 'getById', 'update', 'create', 'delete' ],
      roles: [ 'get', 'getById', 'update', 'create', 'delete' ],
      users: [ 'get', 'getById', 'update', 'create', 'delete' ],
      agents: [ 'get', 'getById', 'update', 'create', 'delete' ],
      players: [],
      currencies: [ 'get', 'getById', 'update', 'create', 'delete' ],
      permissions: [ 'get', 'getById', 'update', 'create', 'delete' ],
      transactions: [ 'get', 'update', 'delete' ]
    }
  },
  query: {},
  status: 400,
  message: 'Roles existed',
  level: 'error',
  timestamp: '2023-08-30T03:09:28.845Z'
}
{
  userId: 1,
  url: '/roles',
  body: {
    name: 'Trương Nguyên',
    permissions: {
      users: [],
      permissions: [ 'delete', 'update', 'get' ],
      agents: [],
      roles: [ 'update', 'get', 'delete' ],
      transactions: [],
      players: [ 'get', 'update', 'delete' ],
      currencies: [],
      games: [ 'update', 'get' ],
      abc: [ 'getById', 'create' ],
      def: [ 'get', 'update', 'delete' ]
    }
  },
  query: {},
  status: 400,
  message: '\n' +
    'Invalid `prisma.roles.create()` invocation:\n' +
    '\n' +
    '\n' +
    'Unique constraint failed on the constraint: `Roles_name_key`',
  level: 'error',
  timestamp: '2023-08-30T07:06:43.353Z'
}
