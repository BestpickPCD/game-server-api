generator client {
  provider = "prisma-client-js"
  output   = "./generated/base-default"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users {
  id         Int       @id @default(autoincrement())
  name       String
  email      String    @unique
  username   String    @unique
  password   String
  type       String?
  apiKey     String?
  roleId     Int?
  balance    Decimal?  @default(0) @db.Decimal(10, 2)
  currencyId Int?
  isActive   Boolean   @default(true)
  createdAt  DateTime  @default(now())
  updatedAt  DateTime? @updatedAt
  deletedAt  DateTime?
  lockedAt  DateTime?
  
  role                    Roles?         @relation(fields: [roleId], references: [id])
  Agents                  Agents?
  parentAgent             Agents[]       @relation("ParentAgent")
  Players                 Players?
  currency                Currencies?    @relation(fields: [currencyId], references: [id])
  ip_user                 ip_user[]
}

model Players {
  id        Int       @unique
  agentId   Int
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  deletedAt DateTime?

  agent Agents? @relation(fields: [agentId], references: [id])
  user  Users?  @relation(fields: [id], references: [id])
}

model Agents {
  id             Int       @unique
  level          Int?
  parentAgentId  Int?
  parentAgentIds Json?
  rate           Decimal?  @default(0) @db.Decimal(10, 2)
  createdAt      DateTime  @default(now())
  updatedAt      DateTime? @updatedAt
  deletedAt      DateTime?

  user        Users?        @relation(fields: [id], references: [id])
  Players     Players[]
  parentAgent Users?        @relation("ParentAgent", fields: [parentAgentId], references: [id])
  vendors     AgentVendor[]
}

model Roles {
  id           Int    @id @default(autoincrement())
  name         String @unique
  permissions Json?
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  deletedAt   DateTime?
  Users Users[]
}
model Permissions{
  id          Int    @id @default(autoincrement())
  name        String @unique
  permissions Json?
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  deletedAt   DateTime?
}

model Currencies {
  id        Int       @id @default(autoincrement())
  name      String    @unique
  code      String    @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  deletedAt DateTime?

  Users        Users[]
}

model ip_user {
  id        Int       @id @default(autoincrement())
  userId    Int
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  deletedAt DateTime?

  users Users? @relation(fields: [userId], references: [id])
}

model AgentVendor {
  id        Int       @id @default(autoincrement())
  agentId   Int
  vendorId  Int
  startDate DateTime?
  endDate   DateTime?
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  deletedAt DateTime?

  agent  Agents?  @relation(fields: [agentId], references: [id])
  vendor Vendors? @relation(fields: [vendorId], references: [id])
}

model Vendors {
  id         Int       @id @default(autoincrement())
  name       String    @unique
  url        String?   @unique
  fetchGames Json?
  contract   String?
  startDate  DateTime?
  endDate    DateTime?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime? @updatedAt
  deletedAt  DateTime?

  agents AgentVendor[]
}
